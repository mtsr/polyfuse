var N=null,E="",T="t",U="u",searchIndex={};
var R=["blocks","namelen","padding","atimensec","mtimensec","ctimensec","lock_owner","offset","flags","unused","attr_valid","attr_valid_nsec","max_readahead","nodeid","max_write","option","try_from","try_into","result","borrow_mut","type_id","to_owned","clone_into","borrow","typeid","fuse_attr","fuse_kstatfs","fuse_file_lock","fuse_opcode","fuse_notify_code","fuse_dirent","default","fuse_direntplus","fuse_out_header","fuse_attr_out","fuse_entry_out","fuse_getxattr_out","fuse_open_out","fuse_write_out","fuse_statfs_out","fuse_lk_out","fuse_bmap_out","fuse_ioctl_out","fuse_ioctl_iovec","fuse_poll_out","fuse_lseek_out","fuse_notify_poll_wakeup_out","fuse_notify_inval_inode_out","fuse_notify_inval_entry_out","fuse_notify_delete_out","fuse_notify_store_out","fuse_notify_retrieve_out","formatter","fuse_in_header","fuse_init_in","fuse_forget_in","fuse_getattr_in","fuse_setattr_in","fuse_mknod_in","fuse_mkdir_in","fuse_rename_in","fuse_link_in","fuse_open_in","fuse_read_in","fuse_write_in","fuse_flush_in","fuse_release_in","fuse_fsync_in","fuse_getxattr_in","fuse_setxattr_in","fuse_lk_in","fuse_access_in","fuse_create_in","fuse_bmap_in","fuse_init_out","fuse_ioctl_in","fuse_poll_in","fuse_interrupt_in","fuse_fallocate_in","fuse_batch_forget_in","fuse_forget_one","fuse_rename2_in","fuse_lseek_in","fuse_copy_file_range_in","fuse_notify_retrieve_in","cuse_init_in","cuse_init_out","polyfuse","polyfuse::Operation","parent","newparent","datasync","Notifier","Notification sender.","Notify the invalidation about a directory entry to the…","session","context","fileattr","Reply to the kernel with the specified file handle and…","Set the validity timeout for inode attributes.","entry_valid","Set the validity timeout for the name.","direct_io","Indicates that the direct I/O is used on this file.","keep_cache","Indicates that the currently cached file data in the…","nonseekable","Indicates that the opened file is not seekable.","requestheader","set_blocks","capabilityflags","Buffer that stores FUSE requests.","The remaining part of request data.","Return a reference to the header part of received request.","poll_ready","Prepare the buffer to receive the specified amount of data.","poll_receive","Transfer one request queued in the kernel driver into this…","Extract the content of request from the buffer.","polyfuse::notify","polyfuse::reply","polyfuse::request","request","filelock","ordering","intoiterator","is_terminated","Handle a FUSE request from the kernel and reply with its…","operation","Operation","RetrieveHandle","ReplyEmpty","ReplyData","ReplyAttr","ReplyEntry","ReplyReadlink","ReplyOpen","ReplyWrite","ReplyOpendir","ReplyXattr","ReplyStatfs","ReplyCreate","ReplyBmap","ReplyPoll","BytesBuffer","SessionInitializer","ConnectionInfo","CapabilityFlags","Filesystem","Interrupt","RequestHeader","blocksize","max_background","congestion_threshold","time_gran","open_flags","mountoptions","notifier","inval_inode","inval_entry","poll_wakeup","MountOptions","polyfuse_examples","Wrap this future in an `Either` future, making it the…","Flatten the execution of this future when the successful…","Wrap the future in a Box, pinning it.","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…","Contextural information about an incoming request.","The filesystem running on the user space.","The kind of FUSE requests received from the kernel.","Look up a directory entry by name.","polyfuse_examples::prelude","Forget about inodes removed from the kernel's internal…","polyfuse_examples::prelude::Operation","Get file attributes.","Set file attributes.","Read a symbolic link.","Create a symbolic link","Create a file node.","Create a directory.","Remove a file.","Remove a directory.","Rename a file.","Create a hard link.","Open a file.","Read data from an opened file.","Write data to an opened file.","Release an opened file.","flock_release","Get the filesystem statistics.","Synchronize the file contents of an opened file.","Set an extended attribute.","Get an extended attribute.","Listxattr","List extended attribute names.","Removexattr","Remove an extended attribute.","Close a file descriptor.","Open a directory.","Read contents from an opened directory.","Releasedir","Release an opened directory.","Synchronize an opened directory contents.","Test for a POSIX file lock.","Acquire, modify or release a POSIX file lock.","Acquire, modify or release a BSD file lock.","Check file access permissions.","Create and open a file.","Map block index within a file to block index within device.","Fallocate","Allocate requested space to an opened file.","CopyFileRange","Copy a range of data from an opened file to another.","Poll for readiness.","polyfuse_examples::memfs","osstring","pathbuf","from_bytes","partial_cmp","from_iter","Return the user ID of the calling process.","Return the group ID of the calling process.","Return the process ID of the calling process.","reply_err","Reply to the kernel with an error code.","on_interrupt","Register the request with the sesssion and get a signal…","as_os_str","to_string_lossy","ancestors","stripprefixerror","Creates an owned [`PathBuf`] like `self` but with the…","components","metadata","Returns `true` if the path exists on disk and is pointing…","with_capacity","into_os_string","reserve_exact","shrink_to_fit","shrink_to","FutureExt","AsyncWrite","poll_write","poll_write_vectored","poll_flush","poll_close"];
searchIndex["polyfuse"]={"doc":"A FUSE (Filesystem in userspace) framework.","i":[[3,"FileAttr",R[87],"Attributes about a file.",N,N],[3,"FileLock",E,"File lock information.",N,N],[3,"Forget",E,"A forget information.",N,N],[3,"StatFs",E,"Filesystem statistics.",N,N],[3,"DirEntry",E,"A directory entry.",N,N],[3,"Context",E,R[167],N,N],[3,R[147],E,"Capability flags to control the behavior of the kernel…",N,N],[3,R[146],E,"Information about the connection associated with a session.",N,N],[3,R[145],E,"Session initializer.",N,N],[3,R[92],E,R[93],N,N],[3,R[149],E,"A future for awaiting an interrupt signal sent to a request.",N,N],[3,"Session",E,"FUSE session driver.",N,N],[4,R[129],E,R[169],N,N],[13,"Lookup",E,R[170],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"reply",E,E,0,N],[13,"Forget",R[87],R[172],0,N],[12,"forgets",R[88],E,0,N],[13,"Getattr",R[87],R[174],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,"reply",E,E,0,N],[13,"Setattr",R[87],R[175],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,"mode",E,E,0,N],[12,"uid",E,E,0,N],[12,"gid",E,E,0,N],[12,"size",E,E,0,N],[12,"atime",E,E,0,N],[12,"mtime",E,E,0,N],[12,"ctime",E,E,0,N],[12,R[6],E,E,0,N],[12,"reply",E,E,0,N],[13,"Readlink",R[87],R[176],0,N],[12,"ino",R[88],E,0,N],[12,"reply",E,E,0,N],[13,"Symlink",R[87],R[177],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"link",E,E,0,N],[12,"reply",E,E,0,N],[13,"Mknod",R[87],R[178],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"mode",E,E,0,N],[12,"rdev",E,E,0,N],[12,"umask",E,E,0,N],[12,"reply",E,E,0,N],[13,"Mkdir",R[87],R[179],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"mode",E,E,0,N],[12,"umask",E,E,0,N],[12,"reply",E,E,0,N],[13,"Unlink",R[87],R[180],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"reply",E,E,0,N],[13,"Rmdir",R[87],R[181],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"reply",E,E,0,N],[13,"Rename",R[87],R[182],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,R[90],E,E,0,N],[12,"newname",E,E,0,N],[12,R[8],E,E,0,N],[12,"reply",E,E,0,N],[13,"Link",R[87],R[183],0,N],[12,"ino",R[88],E,0,N],[12,R[90],E,E,0,N],[12,"newname",E,E,0,N],[12,"reply",E,E,0,N],[13,"Open",R[87],R[184],0,N],[12,"ino",R[88],E,0,N],[12,R[8],E,E,0,N],[12,"reply",E,E,0,N],[13,"Read",R[87],R[185],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[7],E,E,0,N],[12,R[8],E,E,0,N],[12,R[6],E,E,0,N],[12,"reply",E,E,0,N],[13,"Write",R[87],R[186],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[7],E,E,0,N],[12,"data",E,E,0,N],[12,R[8],E,E,0,N],[12,R[6],E,E,0,N],[12,"reply",E,E,0,N],[13,"Release",R[87],R[187],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[8],E,E,0,N],[12,R[6],E,E,0,N],[12,"flush",E,E,0,N],[12,R[188],E,E,0,N],[12,"reply",E,E,0,N],[13,"Statfs",R[87],R[189],0,N],[12,"ino",R[88],E,0,N],[12,"reply",E,E,0,N],[13,"Fsync",R[87],R[190],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[91],E,E,0,N],[12,"reply",E,E,0,N],[13,"Setxattr",R[87],R[191],0,N],[12,"ino",R[88],E,0,N],[12,"name",E,E,0,N],[12,"value",E,E,0,N],[12,R[8],E,E,0,N],[12,"reply",E,E,0,N],[13,"Getxattr",R[87],R[192],0,N],[12,"ino",R[88],E,0,N],[12,"name",E,E,0,N],[12,"size",E,E,0,N],[12,"reply",E,E,0,N],[13,R[193],R[87],R[194],0,N],[12,"ino",R[88],E,0,N],[12,"size",E,E,0,N],[12,"reply",E,E,0,N],[13,R[195],R[87],R[196],0,N],[12,"ino",R[88],E,0,N],[12,"name",E,E,0,N],[12,"reply",E,E,0,N],[13,"Flush",R[87],R[197],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[6],E,E,0,N],[12,"reply",E,E,0,N],[13,"Opendir",R[87],R[198],0,N],[12,"ino",R[88],E,0,N],[12,R[8],E,E,0,N],[12,"reply",E,E,0,N],[13,"Readdir",R[87],R[199],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[7],E,E,0,N],[12,"reply",E,E,0,N],[13,R[200],R[87],R[201],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[8],E,E,0,N],[12,"reply",E,E,0,N],[13,"Fsyncdir",R[87],R[202],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[91],E,E,0,N],[12,"reply",E,E,0,N],[13,"Getlk",R[87],R[203],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,"owner",E,E,0,N],[12,"lk",E,E,0,N],[12,"reply",E,E,0,N],[13,"Setlk",R[87],R[204],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,"owner",E,E,0,N],[12,"lk",E,E,0,N],[12,"sleep",E,E,0,N],[12,"reply",E,E,0,N],[13,"Flock",R[87],R[205],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,"owner",E,E,0,N],[12,"op",E,E,0,N],[12,"reply",E,E,0,N],[13,"Access",R[87],R[206],0,N],[12,"ino",R[88],E,0,N],[12,"mask",E,E,0,N],[12,"reply",E,E,0,N],[13,"Create",R[87],R[207],0,N],[12,R[89],R[88],E,0,N],[12,"name",E,E,0,N],[12,"mode",E,E,0,N],[12,"umask",E,E,0,N],[12,R[155],E,E,0,N],[12,"reply",E,E,0,N],[13,"Bmap",R[87],R[208],0,N],[12,"ino",R[88],E,0,N],[12,"block",E,E,0,N],[12,R[151],E,E,0,N],[12,"reply",E,E,0,N],[13,R[209],R[87],R[210],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,R[7],E,E,0,N],[12,"length",E,E,0,N],[12,"mode",E,E,0,N],[12,"reply",E,E,0,N],[13,R[211],R[87],R[212],0,N],[12,"ino_in",R[88],E,0,N],[12,"off_in",E,E,0,N],[12,"fh_in",E,E,0,N],[12,"ino_out",E,E,0,N],[12,"off_out",E,E,0,N],[12,"fh_out",E,E,0,N],[12,"len",E,E,0,N],[12,R[8],E,E,0,N],[12,"reply",E,E,0,N],[13,"Poll",R[87],R[213],0,N],[12,"ino",R[88],E,0,N],[12,"fh",E,E,0,N],[12,"events",E,E,0,N],[12,"kh",E,E,0,N],[12,"reply",E,E,0,N],[0,"notify",R[87],"Send notification to the kernel.",N,N],[3,R[92],R[119],R[93],N,N],[3,R[130],E,"A handle for awaiting a result of `notify_retrieve`.",N,N],[11,"new",E,"Create a new `Notifier`.",1,[[],["self"]]],[11,R[158],E,"Notify the cache invalidation about an inode to the kernel.",1,[[["i64"],["self"],[R[95]],["w"],["u64"]]]],[11,R[159],E,R[94],1,[[["self"],[R[95]],["w"],["u64"]]]],[11,"delete",E,R[94],1,[[["self"],[R[95]],["w"],["u64"]]]],[11,"store",E,"Push the data in an inode for updating the kernel cache.",1,[[["self"],[R[95]],["w"],["u64"]]]],[11,"retrieve",E,"Retrieve data in an inode from the kernel cache.",1,[[["self"],["u32"],[R[95]],["w"],["u64"]]]],[11,R[160],E,"Send I/O readiness to the kernel.",1,[[["self"],[R[95]],["w"],["u64"]]]],[11,"unique",E,"Return the unique ID of the notification.",2,[[["self"]],["u64"]]],[0,"reply",R[87],"Replies to the kernel.",N,N],[3,R[131],R[120],"Reply with an empty output.",N,N],[3,R[132],E,"Reply with arbitrary binary data.",N,N],[3,R[133],E,"Reply with the inode attributes.",N,N],[3,R[134],E,"Reply with entry params.",N,N],[3,R[135],E,"Reply with the read link value.",N,N],[3,R[136],E,"Reply with an opened file.",N,N],[3,R[137],E,"Reply with the information about written data.",N,N],[3,R[138],E,"Reply with an opened directory.",N,N],[3,R[139],E,"Reply to a request about extended attributes.",N,N],[3,R[140],E,"Reply with the filesystem staticstics.",N,N],[3,"ReplyLk",E,"Reply with a file lock.",N,N],[3,R[141],E,"Reply with information about a created file.",N,N],[3,R[142],E,"Reply with the mapped block index.",N,N],[3,R[143],E,"Reply with the poll result.",N,N],[11,"ok",E,"Send an empty reply to the kernel.",3,[[[R[96]]]]],[11,"size",E,"Return the maximum size of data provided by the kernel.",4,[[["self"]],["u32"]]],[11,"data",E,"Reply to the kernel with a data.",4,[[[R[96]]]]],[11,"data_vectored",E,"Reply to the kernel with a split data.",4,[[[R[96]]]]],[11,R[10],E,"Set the validity timeout for attributes.",5,[[["self"],["u64"],["u32"]]]],[11,"attr",E,"Reply to the kernel with the specified attributes.",5,[[[R[97]],[R[96]]]]],[11,R[10],E,R[99],6,[[["self"],["u64"],["u32"]]]],[11,R[100],E,R[101],6,[[["self"],["u64"],["u32"]]]],[11,"entry",E,"Reply to the kernel with the specified entry parameters.",6,[[[R[97]],[R[96]],["u64"]]]],[11,"link",E,"Reply to the kernel with the specified link value.",7,[[[R[96]]]]],[11,R[102],E,R[103],8,[[["self"],["bool"]]]],[11,R[104],E,R[105],8,[[["self"],["bool"]]]],[11,R[106],E,R[107],8,[[["self"],["bool"]]]],[11,"open",E,R[98],8,[[[R[96]],["u64"]]]],[11,"write",E,"Reply to the kernel with the total length of written data.",9,[[["u32"],[R[96]]]]],[11,"cache_dir",E,"Enable caching of entries returned by `readdir`.",10,[[["self"],["bool"]]]],[11,"open",E,R[98],10,[[[R[96]],["u64"]]]],[11,"size",E,"Reply to the kernel with the specified size value.",11,[[["u32"],[R[96]]]]],[11,"value",E,"Reply to the kernel with the specified value.",11,[[[R[96]]]]],[11,"stat",E,"Reply to the kernel with the specified statistics.",12,[[["statfs"],[R[96]]]]],[11,"lock",E,"Reply to the kernel with the specified file lock.",13,[[[R[123]],[R[96]]]]],[11,R[10],E,R[99],14,[[["self"],["u64"],["u32"]]]],[11,R[100],E,R[101],14,[[["self"],["u64"],["u32"]]]],[11,R[102],E,R[103],14,[[["self"],["bool"]]]],[11,R[104],E,R[105],14,[[["self"],["bool"]]]],[11,R[106],E,R[107],14,[[["self"],["bool"]]]],[11,"create",E,"Reply to the kernel with the specified entry parameters…",14,[[[R[97]],[R[96]],["u64"]]]],[11,"block",E,"Reply to the kernel with a mapped block index.",15,[[[R[96]],["u64"]]]],[11,"events",E,"Reply to the kernel with a poll event mask.",16,[[["u32"],[R[96]]]]],[0,R[122],R[87],"Receives and parses FUSE requests.",N,N],[3,R[144],R[121],"A `Buffer` that stores a FUSE request in memory.",N,N],[3,"Request",E,"A FUSE request.",N,N],[3,R[150],E,"The header part of a FUSE request.",N,N],[8,"Buffer",E,R[111],N,N],[16,"Data",E,R[112],17,N],[10,"header",E,R[113],17,[[["self"]],[[R[15],[R[108]]],[R[108]]]]],[10,R[114],E,R[115],17,[[["pin"],["usize"],["self"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[10,R[116],E,R[117],17,[[["pin"],["r"],["self"],["pin"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[10,"extract",E,R[118],17,[[["self"]],[[R[18],[R[122]]],[R[122]]]]],[11,"new",E,"Create a new `BytesBuffer` with the specified buffer size.",18,[[["usize"]],["self"]]],[11,"ino",R[87],E,19,[[["self"]],["u64"]]],[11,"set_ino",E,E,19,[[["self"],["u64"]]]],[11,"size",E,E,19,[[["self"]],["u64"]]],[11,"set_size",E,E,19,[[["self"],["u64"]]]],[11,R[0],E,E,19,[[["self"]],["u64"]]],[11,R[109],E,E,19,[[["self"],["u64"]]]],[11,"mode",E,E,19,[[["self"]],["u32"]]],[11,"set_mode",E,E,19,[[["self"],["u32"]]]],[11,"nlink",E,E,19,[[["self"]],["u32"]]],[11,"set_nlink",E,E,19,[[["self"],["u32"]]]],[11,"uid",E,E,19,[[["self"]],["u32"]]],[11,"set_uid",E,E,19,[[["self"],["u32"]]]],[11,"gid",E,E,19,[[["self"]],["u32"]]],[11,"set_gid",E,E,19,[[["self"],["u32"]]]],[11,"rdev",E,E,19,[[["self"]],["u32"]]],[11,"set_rdev",E,E,19,[[["self"],["u32"]]]],[11,"blksize",E,E,19,[[["self"]],["u32"]]],[11,"set_blksize",E,E,19,[[["self"],["u32"]]]],[11,"atime",E,E,19,[[["self"]]]],[11,"set_atime",E,E,19,[[["self"],["u64"],["u32"]]]],[11,"mtime",E,E,19,[[["self"]]]],[11,"set_mtime",E,E,19,[[["self"],["u64"],["u32"]]]],[11,"ctime",E,E,19,[[["self"]]]],[11,"set_ctime",E,E,19,[[["self"],["u64"],["u32"]]]],[11,"start",E,E,20,[[["self"]],["u64"]]],[11,"set_start",E,E,20,[[["self"],["u64"]]]],[11,"end",E,E,20,[[["self"]],["u64"]]],[11,"set_end",E,E,20,[[["self"],["u64"]]]],[11,"typ",E,E,20,[[["self"]],["u32"]]],[11,"set_typ",E,E,20,[[["self"],["u32"]]]],[11,"pid",E,E,20,[[["self"]],["u32"]]],[11,"set_pid",E,E,20,[[["self"],["u32"]]]],[11,R[0],E,E,21,[[["self"]],["u64"]]],[11,R[109],E,E,21,[[["self"],["u64"]]]],[11,"bfree",E,E,21,[[["self"]],["u64"]]],[11,"set_bfree",E,E,21,[[["self"],["u64"]]]],[11,"bavail",E,E,21,[[["self"]],["u64"]]],[11,"set_bavail",E,E,21,[[["self"],["u64"]]]],[11,"files",E,E,21,[[["self"]],["u64"]]],[11,"set_files",E,E,21,[[["self"],["u64"]]]],[11,"ffree",E,E,21,[[["self"]],["u64"]]],[11,"set_ffree",E,E,21,[[["self"],["u64"]]]],[11,"bsize",E,E,21,[[["self"]],["u32"]]],[11,"set_bsize",E,E,21,[[["self"],["u32"]]]],[11,R[1],E,E,21,[[["self"]],["u32"]]],[11,"set_namelen",E,E,21,[[["self"],["u32"]]]],[11,"frsize",E,E,21,[[["self"]],["u32"]]],[11,"set_frsize",E,E,21,[[["self"],["u32"]]]],[11,"ino",E,E,22,[[["self"]],["u64"]]],[11,"nlookup",E,E,22,[[["self"]],["u64"]]],[11,"new",E,E,23,[[["u64"]],["self"]]],[11,"dir",E,E,23,[[["u64"]],["self"]]],[11,"file",E,E,23,[[["u64"]],["self"]]],[11,R[13],E,E,23,[[["self"]],["u64"]]],[11,"set_nodeid",E,E,23,[[["self"],["u64"]]]],[11,R[7],E,E,23,[[["self"]],["u64"]]],[11,"set_offset",E,E,23,[[["self"],["u64"]]]],[11,"typ",E,E,23,[[["self"]],["u32"]]],[11,"set_typ",E,E,23,[[["self"],["u32"]]]],[11,"name",E,E,23,[[["self"]],["osstr"]]],[11,"set_name",E,E,23,[[["self"]]]],[11,"uid",E,R[220],24,[[["self"]],["u32"]]],[11,"gid",E,R[221],24,[[["self"]],["u32"]]],[11,"pid",E,R[222],24,[[["self"]],["u32"]]],[11,R[223],E,R[224],24,[[["i32"],["self"]]]],[11,R[225],E,R[226],24,[[["self"]]]],[11,R[8],E,"Return a reference to the capability flags.",25,[[["self"]],[R[110]]]],[11,R[12],E,"Set the maximum readahead.",25,[[["self"],["u32"]],["self"]]],[11,R[14],E,"Set the maximum size of the write buffer.",25,[[["self"],["u32"]],["self"]]],[11,R[152],E,"Return the maximum number of pending background requests.",25,[[["u16"],["self"]],["self"]]],[11,R[153],E,"Set the threshold number of pending background requests…",25,[[["u16"],["self"]],["self"]]],[11,R[154],E,"Set the timestamp resolution supported by the filesystem.",25,[[["self"],["u32"]],["self"]]],[11,"init",E,"Start a new FUSE session.",25,[[["i"]]]],[11,"proto_major",E,"Returns the major version of the protocol.",26,[[["self"]],["u32"]]],[11,"proto_minor",E,"Returns the minor version of the protocol.",26,[[["self"]],["u32"]]],[11,R[8],E,"Return a set of capability flags sent to the kernel driver.",26,[[["self"]],[R[110]]]],[11,"no_open_support",E,"Return whether the kernel supports for zero-message opens.",26,[[["self"]],["bool"]]],[11,"no_opendir_support",E,"Return whether the kernel supports for zero-message…",26,[[["self"]],["bool"]]],[11,R[12],E,"Returns the maximum readahead.",26,[[["self"]],["u32"]]],[11,R[14],E,"Returns the maximum size of the write buffer.",26,[[["self"]],["u32"]]],[18,"ASYNC_READ",E,"The filesystem supports asynchronous read requests.",27,N],[18,"ATOMIC_O_TRUNC",E,"The filesystem supports the `O_TRUNC` open flag.",27,N],[18,"AUTO_INVAL_DATA",E,"The kernel check the validity of attributes on every read.",27,N],[18,"ASYNC_DIO",E,"The filesystem supports asynchronous direct I/O submission.",27,N],[18,"PARALLEL_DIROPS",E,"The kernel supports parallel directory operations.",27,N],[18,"HANDLE_KILLPRIV",E,"The filesystem is responsible for unsetting setuid and…",27,N],[18,"POSIX_LOCKS",E,"The filesystem supports the POSIX-style file lock.",27,N],[18,"FLOCK_LOCKS",E,"The filesystem supports the `flock` handling.",27,N],[18,"EXPORT_SUPPORT",E,"The filesystem supports lookups of `\".\"` and `\"..\"`.",27,N],[18,"DONT_MASK",E,"The kernel should not apply the umask to the file mode on…",27,N],[18,"WRITEBACK_CACHE",E,"The writeback caching should be enabled.",27,N],[18,"POSIX_ACL",E,"The filesystem supports POSIX access control lists.",27,N],[11,"empty",E,"Returns an empty set of flags",27,[[],[R[110]]]],[11,"all",E,"Returns the set containing all flags.",27,[[],[R[110]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",27,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",27,[[["u32"]],[[R[15],[R[110]]],[R[110]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",27,[[["u32"]],[R[110]]]],[11,"from_bits_unchecked",E,"Convert from underlying bit representation, preserving all…",27,[[["u32"]],[R[110]]]],[11,"is_empty",E,"Returns `true` if no flags are currently stored.",27,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",27,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",27,[[[R[110]],["self"]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",27,[[[R[110]],["self"]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",27,[[["self"],[R[110]]]]],[11,"remove",E,"Removes the specified flags in-place.",27,[[["self"],[R[110]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",27,[[["self"],[R[110]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",27,[[["self"],[R[110]],["bool"]]]],[11,"connection_info",E,"Returns the information about the FUSE connection.",28,[[["self"]],["connectioninfo"]]],[11,"buffer_size",E,"Returns the buffer size required to receive one request.",28,[[["self"]],["usize"]]],[11,"receive",E,"Receive one or more requests from the kernel.",28,[[[R[157]],["self"],["b"],["r"]]]],[11,"process",E,"Process an incoming request using the specified filesystem…",28,[[["w"],["self"],["b"],["f"]]]],[8,R[148],E,R[168],N,N],[11,"call",E,R[127],29,[[[R[128]],["self"],[R[96]]],[["box",["future"]],["pin",["box"]]]]],[8,"Buffer",E,R[111],N,N],[16,"Data",E,R[112],17,N],[10,"header",E,R[113],17,[[["self"]],[[R[15],[R[108]]],[R[108]]]]],[10,R[114],E,R[115],17,[[["pin"],["usize"],["self"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[10,R[116],E,R[117],17,[[["pin"],["r"],["self"],["pin"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[10,"extract",E,R[118],17,[[["self"]],[[R[18],[R[122]]],[R[122]]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[21],E,E,19,[[["self"]],[T]]],[11,R[22],E,E,19,[[["self"],[T]]]],[11,R[16],E,E,19,[[[U]],[R[18]]]],[11,R[17],E,E,19,[[],[R[18]]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[T]]],[11,R[20],E,E,19,[[["self"]],[R[24]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[21],E,E,20,[[["self"]],[T]]],[11,R[22],E,E,20,[[["self"],[T]]]],[11,R[16],E,E,20,[[[U]],[R[18]]]],[11,R[17],E,E,20,[[],[R[18]]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[T]]],[11,R[20],E,E,20,[[["self"]],[R[24]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[16],E,E,22,[[[U]],[R[18]]]],[11,R[17],E,E,22,[[],[R[18]]]],[11,R[23],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[T]]],[11,R[20],E,E,22,[[["self"]],[R[24]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[21],E,E,21,[[["self"]],[T]]],[11,R[22],E,E,21,[[["self"],[T]]]],[11,R[16],E,E,21,[[[U]],[R[18]]]],[11,R[17],E,E,21,[[],[R[18]]]],[11,R[23],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[T]]],[11,R[20],E,E,21,[[["self"]],[R[24]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[16],E,E,23,[[[U]],[R[18]]]],[11,R[17],E,E,23,[[],[R[18]]]],[11,R[23],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[T]]],[11,R[20],E,E,23,[[["self"]],[R[24]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[16],E,E,24,[[[U]],[R[18]]]],[11,R[17],E,E,24,[[],[R[18]]]],[11,R[23],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[T]]],[11,R[20],E,E,24,[[["self"]],[R[24]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[21],E,E,27,[[["self"]],[T]]],[11,R[22],E,E,27,[[["self"],[T]]]],[11,R[16],E,E,27,[[[U]],[R[18]]]],[11,R[17],E,E,27,[[],[R[18]]]],[11,R[23],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[T]]],[11,R[20],E,E,27,[[["self"]],[R[24]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[16],E,E,26,[[[U]],[R[18]]]],[11,R[17],E,E,26,[[],[R[18]]]],[11,R[23],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[T]]],[11,R[20],E,E,26,[[["self"]],[R[24]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[16],E,E,25,[[[U]],[R[18]]]],[11,R[17],E,E,25,[[],[R[18]]]],[11,R[23],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[T]]],[11,R[20],E,E,25,[[["self"]],[R[24]]]],[11,"into",R[119],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[16],E,E,1,[[[U]],[R[18]]]],[11,R[17],E,E,1,[[],[R[18]]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[24]]]],[11,"into",R[87],E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[16],E,E,30,[[[U]],[R[18]]]],[11,R[17],E,E,30,[[],[R[18]]]],[11,R[23],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[T]]],[11,R[20],E,E,30,[[["self"]],[R[24]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[16],E,E,28,[[[U]],[R[18]]]],[11,R[17],E,E,28,[[],[R[18]]]],[11,R[23],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[T]]],[11,R[20],E,E,28,[[["self"]],[R[24]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[16],E,E,0,[[[U]],[R[18]]]],[11,R[17],E,E,0,[[],[R[18]]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[24]]]],[11,"into",R[119],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[16],E,E,2,[[[U]],[R[18]]]],[11,R[17],E,E,2,[[],[R[18]]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[24]]]],[11,"into",R[120],E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[16],E,E,3,[[[U]],[R[18]]]],[11,R[17],E,E,3,[[],[R[18]]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[16],E,E,4,[[[U]],[R[18]]]],[11,R[17],E,E,4,[[],[R[18]]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[16],E,E,5,[[[U]],[R[18]]]],[11,R[17],E,E,5,[[],[R[18]]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[16],E,E,6,[[[U]],[R[18]]]],[11,R[17],E,E,6,[[],[R[18]]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[16],E,E,7,[[[U]],[R[18]]]],[11,R[17],E,E,7,[[],[R[18]]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[16],E,E,8,[[[U]],[R[18]]]],[11,R[17],E,E,8,[[],[R[18]]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[20],E,E,8,[[["self"]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[16],E,E,9,[[[U]],[R[18]]]],[11,R[17],E,E,9,[[],[R[18]]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[16],E,E,10,[[[U]],[R[18]]]],[11,R[17],E,E,10,[[],[R[18]]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[16],E,E,11,[[[U]],[R[18]]]],[11,R[17],E,E,11,[[],[R[18]]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[16],E,E,12,[[[U]],[R[18]]]],[11,R[17],E,E,12,[[],[R[18]]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[T]]],[11,R[20],E,E,12,[[["self"]],[R[24]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[16],E,E,13,[[[U]],[R[18]]]],[11,R[17],E,E,13,[[],[R[18]]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[T]]],[11,R[20],E,E,13,[[["self"]],[R[24]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[16],E,E,14,[[[U]],[R[18]]]],[11,R[17],E,E,14,[[],[R[18]]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[T]]],[11,R[20],E,E,14,[[["self"]],[R[24]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[16],E,E,15,[[[U]],[R[18]]]],[11,R[17],E,E,15,[[],[R[18]]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[T]]],[11,R[20],E,E,15,[[["self"]],[R[24]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[16],E,E,16,[[[U]],[R[18]]]],[11,R[17],E,E,16,[[],[R[18]]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[T]]],[11,R[20],E,E,16,[[["self"]],[R[24]]]],[11,"into",R[121],E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[16],E,E,18,[[[U]],[R[18]]]],[11,R[17],E,E,18,[[],[R[18]]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[T]]],[11,R[20],E,E,18,[[["self"]],[R[24]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[16],E,E,31,[[[U]],[R[18]]]],[11,R[17],E,E,31,[[],[R[18]]]],[11,R[23],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[T]]],[11,R[20],E,E,31,[[["self"]],[R[24]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[16],E,E,32,[[[U]],[R[18]]]],[11,R[17],E,E,32,[[],[R[18]]]],[11,R[23],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[T]]],[11,R[20],E,E,32,[[["self"]],[R[24]]]],[11,"header",E,E,18,[[["self"]],[[R[15],[R[108]]],[R[108]]]]],[11,R[114],E,E,18,[[["pin"],["usize"],["self"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[11,R[116],E,E,18,[[["pin"],["r"],["self"],["pin"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[11,"extract",E,E,18,[[["self"]],[[R[18],[R[122]]],[R[122]]]]],[11,"as_ref",R[87],E,23,[[["self"]]]],[11,"extend",E,E,27,[[["self"],[R[125]]]]],[11,"clone",E,E,19,[[["self"]],[R[97]]]],[11,"clone",E,E,20,[[["self"]],[R[123]]]],[11,"clone",E,E,21,[[["self"]],["statfs"]]],[11,"clone",E,E,27,[[["self"]],[R[110]]]],[11,R[31],R[119],E,1,[[],["self"]]],[11,R[31],R[87],E,19,[[],[R[97]]]],[11,R[31],E,E,20,[[],[R[123]]]],[11,R[31],E,E,21,[[],["statfs"]]],[11,R[31],E,E,25,[[],["self"]]],[11,R[31],E,E,27,[[],["self"]]],[11,"cmp",E,E,27,[[["self"],[R[110]]],[R[124]]]],[11,"eq",E,E,27,[[["self"],[R[110]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[110]]],["bool"]]],[11,R[218],E,E,27,[[["self"],[R[110]]],[[R[15],[R[124]]],[R[124]]]]],[11,"lt",E,E,27,[[["self"],[R[110]]],["bool"]]],[11,"le",E,E,27,[[["self"],[R[110]]],["bool"]]],[11,"gt",E,E,27,[[["self"],[R[110]]],["bool"]]],[11,"ge",E,E,27,[[["self"],[R[110]]],["bool"]]],[11,"fmt",R[119],E,1,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,2,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",R[120],E,3,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,4,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,5,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,6,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,7,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,8,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,9,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,10,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,11,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,12,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,13,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,14,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,15,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,16,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",R[121],E,18,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,31,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,32,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",R[87],E,19,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,20,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,21,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,22,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,23,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,24,[[["self"],[R[52]]],[R[18]]]],[11,"fmt",E,E,0,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,25,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,26,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,27,[[["self"],[R[52]]],[R[18]]]],[11,"fmt",E,E,28,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,30,[[[R[52]],["self"]],[R[18]]]],[11,"sub",E,"Returns the set difference of the two sets of flags.",27,[[[R[110]]],[R[110]]]],[11,R[16],E,E,19,[[["stat"]],[R[18]]]],[11,R[16],E,E,20,[[["flock"]],[R[18]]]],[11,R[16],E,E,21,[[["statvfs"]],[R[18]]]],[11,"sub_assign",E,"Disables all flags enabled in the set.",27,[[["self"],[R[110]]]]],[11,"not",E,"Returns the complement of this set of flags.",27,[[],[R[110]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",27,[[[R[110]]],[R[110]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",27,[[[R[110]]],[R[110]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",27,[[[R[110]]],[R[110]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",27,[[["self"],[R[110]]]]],[11,"bitor_assign",E,"Adds the set of flags.",27,[[["self"],[R[110]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",27,[[["self"],[R[110]]]]],[11,"hash",E,E,27,[[["self"],["__h"]]]],[11,R[219],E,E,27,[[[R[125]]],[R[110]]]],[11,"fmt",E,E,27,[[["self"],[R[52]]],[R[18]]]],[11,"fmt",E,E,27,[[["self"],[R[52]]],[R[18]]]],[11,"fmt",E,E,27,[[["self"],[R[52]]],[R[18]]]],[11,"fmt",E,E,27,[[["self"],[R[52]]],[R[18]]]],[11,"poll",R[119],E,2,[[["pin"],["self"],[R[96]]],["poll"]]],[11,"poll",R[87],E,30,[[["pin"],["self"],[R[96]]],["poll"]]],[11,R[126],R[119],E,2,[[["self"]],["bool"]]],[11,R[126],R[87],E,30,[[["self"]],["bool"]]],[11,"call",E,R[127],29,[[[R[128]],["self"],[R[96]]],[["box",["future"]],["pin",["box"]]]]]],"p":[[4,R[129]],[3,R[92]],[3,R[130]],[3,R[131]],[3,R[132]],[3,R[133]],[3,R[134]],[3,R[135]],[3,R[136]],[3,R[137]],[3,R[138]],[3,R[139]],[3,R[140]],[3,"ReplyLk"],[3,R[141]],[3,R[142]],[3,R[143]],[8,"Buffer"],[3,R[144]],[3,"FileAttr"],[3,"FileLock"],[3,"StatFs"],[3,"Forget"],[3,"DirEntry"],[3,"Context"],[3,R[145]],[3,R[146]],[3,R[147]],[3,"Session"],[8,R[148]],[3,R[149]],[3,"Request"],[3,R[150]]]};
searchIndex["polyfuse_examples"]={"doc":E,"i":[[5,"init_tracing",R[162],E,N,[[],[R[18]]]],[5,"get_mountpoint",E,E,N,[[],[[R[216]],[R[18],[R[216]]]]]],[0,"memfs",E,E,N,N],[3,"MemFS",R[214],"An in-memory filesystem.",N,N],[11,"new",E,"Create a new `MemFS` mounted on the specified directory.",0,[[],[R[18]]]],[0,"prelude",R[162],E,N,N],[14,"anyhow",R[171],"Construct an ad-hoc error from a string.",N,N],[14,"ensure",E,"Return early with an error if a condition is not satisfied.",N,N],[23,"async_trait",E,E,N,N],[8,"Future",E,"A future represents an asynchronous computation.",N,N],[16,"Output",E,"The type of value produced on completion.",1,N],[10,"poll",E,"Attempt to resolve the future to a final value,…",1,[[["pin"],["self"],[R[96]]],["poll"]]],[8,R[240],E,"An extension trait for `Future`s that provides a variety…",N,N],[11,"map",E,"Map this future's output to a different type, returning a…",2,[[["f"]],["map"]]],[11,"then",E,"Chain on a computation for when a future finished, passing…",2,[[["f"]],["then"]]],[11,"left_future",E,R[163],2,[[],["either"]]],[11,"right_future",E,R[163],2,[[],["either"]]],[11,"into_stream",E,"Convert this future into a single element stream.",2,[[],["intostream"]]],[11,"flatten",E,R[164],2,[[],["flatten"]]],[11,"flatten_stream",E,R[164],2,[[],["flattenstream"]]],[11,"fuse",E,"Fuse a future such that `poll` will never again be called…",2,[[],["fuse"]]],[11,"inspect",E,"Do something with the output of a future before passing it…",2,[[["f"]],["inspect"]]],[11,"catch_unwind",E,"Catches unwinding panics while polling the future.",2,[[],["catchunwind"]]],[11,"shared",E,"Create a cloneable handle to this future where all handles…",2,[[],["shared"]]],[11,"remote_handle",E,"Turn this future into a future that yields `()` on…",2,[[]]],[11,"boxed",E,R[165],2,[[],[["pin",["box"]],["box",["future"]]]]],[11,"boxed_local",E,R[165],2,[[],[["box",["future"]],["pin",["box"]]]]],[11,"unit_error",E,R[166],2,[[],["uniterror"]]],[11,"never_error",E,R[166],2,[[],["nevererror"]]],[11,"poll_unpin",E,"A convenience for calling `Future::poll` on `Unpin` future…",2,[[["self"],[R[96]]],["poll"]]],[11,"now_or_never",E,"Evaluates and consumes the future, returning the resulting…",2,[[],[R[15]]]],[8,R[241],E,"Write bytes asynchronously.",N,N],[10,R[242],E,"Attempt to write bytes from `buf` into the object.",3,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["usize","error"]]]]],[11,R[243],E,"Attempt to write bytes from `bufs` into the object using…",3,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["usize","error"]]]]],[10,R[244],E,"Attempt to flush the object, ensuring that any buffered…",3,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["error"]]]]],[10,R[245],E,"Attempt to close the object.",3,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["error"]]]]],[3,"Context",E,R[167],N,N],[8,R[148],E,R[168],N,N],[11,"call",E,R[127],4,[[[R[128]],["self"],[R[96]]],[["pin",["box"]],["box",["future"]]]]],[4,R[129],E,R[169],N,N],[13,"Lookup",E,R[170],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"reply",E,E,5,N],[13,"Forget",R[171],R[172],5,N],[12,"forgets",R[173],E,5,N],[13,"Getattr",R[171],R[174],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,"reply",E,E,5,N],[13,"Setattr",R[171],R[175],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,"mode",E,E,5,N],[12,"uid",E,E,5,N],[12,"gid",E,E,5,N],[12,"size",E,E,5,N],[12,"atime",E,E,5,N],[12,"mtime",E,E,5,N],[12,"ctime",E,E,5,N],[12,R[6],E,E,5,N],[12,"reply",E,E,5,N],[13,"Readlink",R[171],R[176],5,N],[12,"ino",R[173],E,5,N],[12,"reply",E,E,5,N],[13,"Symlink",R[171],R[177],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"link",E,E,5,N],[12,"reply",E,E,5,N],[13,"Mknod",R[171],R[178],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"mode",E,E,5,N],[12,"rdev",E,E,5,N],[12,"umask",E,E,5,N],[12,"reply",E,E,5,N],[13,"Mkdir",R[171],R[179],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"mode",E,E,5,N],[12,"umask",E,E,5,N],[12,"reply",E,E,5,N],[13,"Unlink",R[171],R[180],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"reply",E,E,5,N],[13,"Rmdir",R[171],R[181],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"reply",E,E,5,N],[13,"Rename",R[171],R[182],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,R[90],E,E,5,N],[12,"newname",E,E,5,N],[12,R[8],E,E,5,N],[12,"reply",E,E,5,N],[13,"Link",R[171],R[183],5,N],[12,"ino",R[173],E,5,N],[12,R[90],E,E,5,N],[12,"newname",E,E,5,N],[12,"reply",E,E,5,N],[13,"Open",R[171],R[184],5,N],[12,"ino",R[173],E,5,N],[12,R[8],E,E,5,N],[12,"reply",E,E,5,N],[13,"Read",R[171],R[185],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[7],E,E,5,N],[12,R[8],E,E,5,N],[12,R[6],E,E,5,N],[12,"reply",E,E,5,N],[13,"Write",R[171],R[186],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[7],E,E,5,N],[12,"data",E,E,5,N],[12,R[8],E,E,5,N],[12,R[6],E,E,5,N],[12,"reply",E,E,5,N],[13,"Release",R[171],R[187],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[8],E,E,5,N],[12,R[6],E,E,5,N],[12,"flush",E,E,5,N],[12,R[188],E,E,5,N],[12,"reply",E,E,5,N],[13,"Statfs",R[171],R[189],5,N],[12,"ino",R[173],E,5,N],[12,"reply",E,E,5,N],[13,"Fsync",R[171],R[190],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[91],E,E,5,N],[12,"reply",E,E,5,N],[13,"Setxattr",R[171],R[191],5,N],[12,"ino",R[173],E,5,N],[12,"name",E,E,5,N],[12,"value",E,E,5,N],[12,R[8],E,E,5,N],[12,"reply",E,E,5,N],[13,"Getxattr",R[171],R[192],5,N],[12,"ino",R[173],E,5,N],[12,"name",E,E,5,N],[12,"size",E,E,5,N],[12,"reply",E,E,5,N],[13,R[193],R[171],R[194],5,N],[12,"ino",R[173],E,5,N],[12,"size",E,E,5,N],[12,"reply",E,E,5,N],[13,R[195],R[171],R[196],5,N],[12,"ino",R[173],E,5,N],[12,"name",E,E,5,N],[12,"reply",E,E,5,N],[13,"Flush",R[171],R[197],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[6],E,E,5,N],[12,"reply",E,E,5,N],[13,"Opendir",R[171],R[198],5,N],[12,"ino",R[173],E,5,N],[12,R[8],E,E,5,N],[12,"reply",E,E,5,N],[13,"Readdir",R[171],R[199],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[7],E,E,5,N],[12,"reply",E,E,5,N],[13,R[200],R[171],R[201],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[8],E,E,5,N],[12,"reply",E,E,5,N],[13,"Fsyncdir",R[171],R[202],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[91],E,E,5,N],[12,"reply",E,E,5,N],[13,"Getlk",R[171],R[203],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,"owner",E,E,5,N],[12,"lk",E,E,5,N],[12,"reply",E,E,5,N],[13,"Setlk",R[171],R[204],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,"owner",E,E,5,N],[12,"lk",E,E,5,N],[12,"sleep",E,E,5,N],[12,"reply",E,E,5,N],[13,"Flock",R[171],R[205],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,"owner",E,E,5,N],[12,"op",E,E,5,N],[12,"reply",E,E,5,N],[13,"Access",R[171],R[206],5,N],[12,"ino",R[173],E,5,N],[12,"mask",E,E,5,N],[12,"reply",E,E,5,N],[13,"Create",R[171],R[207],5,N],[12,R[89],R[173],E,5,N],[12,"name",E,E,5,N],[12,"mode",E,E,5,N],[12,"umask",E,E,5,N],[12,R[155],E,E,5,N],[12,"reply",E,E,5,N],[13,"Bmap",R[171],R[208],5,N],[12,"ino",R[173],E,5,N],[12,"block",E,E,5,N],[12,R[151],E,E,5,N],[12,"reply",E,E,5,N],[13,R[209],R[171],R[210],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,R[7],E,E,5,N],[12,"length",E,E,5,N],[12,"mode",E,E,5,N],[12,"reply",E,E,5,N],[13,R[211],R[171],R[212],5,N],[12,"ino_in",R[173],E,5,N],[12,"off_in",E,E,5,N],[12,"fh_in",E,E,5,N],[12,"ino_out",E,E,5,N],[12,"off_out",E,E,5,N],[12,"fh_out",E,E,5,N],[12,"len",E,E,5,N],[12,R[8],E,E,5,N],[12,"reply",E,E,5,N],[13,"Poll",R[171],R[213],5,N],[12,"ino",R[173],E,5,N],[12,"fh",E,E,5,N],[12,"events",E,E,5,N],[12,"kh",E,E,5,N],[12,"reply",E,E,5,N],[3,"OsStr",R[171],"Borrowed reference to an OS string (see [`OsString`]).",N,N],[3,"OsString",E,"A type that can represent owned, mutable platform-native…",N,N],[8,"OsStrExt",E,"Platform-specific extensions to [`OsStr`].",N,N],[10,R[217],E,"Creates an [`OsStr`] from a byte slice.",6,[[],["self"]]],[10,"as_bytes",E,"Gets the underlying byte view of the [`OsStr`] slice.",6,[[["self"]]]],[3,"Path",E,"A slice of a path (akin to [`str`]).",N,N],[3,"PathBuf",E,"An owned, mutable path (akin to [`String`]).",N,N],[11,"into",R[214],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[16],E,E,0,[[[U]],[R[18]]]],[11,R[17],E,E,0,[[],[R[18]]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[24]]]],[11,"into",R[171],E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[16],E,E,7,[[[U]],[R[18]]]],[11,R[17],E,E,7,[[],[R[18]]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[16],E,E,5,[[[U]],[R[18]]]],[11,R[17],E,E,5,[[],[R[18]]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[24]]]],[11,R[21],E,E,8,[[["self"]],[T]]],[11,R[22],E,E,8,[[["self"],[T]]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[20],E,E,8,[[["self"]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[21],E,E,9,[[["self"]],[T]]],[11,R[22],E,E,9,[[["self"],[T]]]],[11,R[16],E,E,9,[[[U]],[R[18]]]],[11,R[17],E,E,9,[[],[R[18]]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[R[24]]]],[11,R[21],E,E,10,[[["self"]],[T]]],[11,R[22],E,E,10,[[["self"],[T]]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[21],E,E,11,[[["self"]],[T]]],[11,R[22],E,E,11,[[["self"],[T]]]],[11,R[16],E,E,11,[[[U]],[R[18]]]],[11,R[17],E,E,11,[[],[R[18]]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[R[24]]]],[11,"fmt",E,E,9,[[["self"],[R[52]]],[[R[18],["error"]],["error"]]]],[11,"fmt",E,E,11,[[["self"],[R[52]]],[[R[18],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[52]]],[[R[18],["error"]],["error"]]]],[11,"fmt",E,E,10,[[["self"],[R[52]]],[[R[18],["error"]],["error"]]]],[11,"extend",E,E,11,[[["self"],["i"]]]],[11,"deref",E,E,11,[[["self"]],["path"]]],[11,"deref",E,E,9,[[["self"]],["osstr"]]],[11,"index",E,E,9,[[["self"],["rangefull"]],["osstr"]]],[11,"eq",E,E,9,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,11,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,11,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,10,[[[R[215]],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[215]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[216]]],["bool"]]],[11,"eq",E,E,8,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,11,[[[R[215]],["self"]],["bool"]]],[11,"eq",E,E,8,[[[R[215]],["self"]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[216]]],["bool"]]],[11,"eq",E,E,8,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,8,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],[R[216]]],["bool"]]],[11,"eq",E,E,8,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,10,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,8,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[216]]],["bool"]]],[11,"eq",E,E,8,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,11,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,9,[[["osstr"],["self"]],["bool"]]],[11,"from_str",E,E,11,[[["str"]],[[R[216]],[R[18],[R[216]]]]]],[11,"as_ref",E,E,9,[[["self"]],["osstr"]]],[11,"as_ref",E,E,8,[[["self"]],["osstr"]]],[11,"as_ref",E,E,9,[[["self"]],["path"]]],[11,"as_ref",E,E,11,[[["self"]],["osstr"]]],[11,"as_ref",E,E,8,[[["self"]],["path"]]],[11,"as_ref",E,E,10,[[["self"]],["path"]]],[11,"as_ref",E,E,11,[[["self"]],["path"]]],[11,"as_ref",E,E,10,[[["self"]],["osstr"]]],[11,"cmp",E,E,9,[[[R[215]],["self"]],[R[124]]]],[11,"cmp",E,E,11,[[["self"],[R[216]]],[R[124]]]],[11,"cmp",E,E,8,[[["osstr"],["self"]],[R[124]]]],[11,"cmp",E,E,10,[[["path"],["self"]],[R[124]]]],[11,"clone",E,E,11,[[["self"]],[R[216]]]],[11,"clone",E,E,9,[[["self"]],[R[215]]]],[11,R[217],E,E,8,[[],["osstr"]]],[11,"as_bytes",E,E,8,[[["self"]]]],[11,"from_vec",E,E,9,[[["vec",["u8"]],["u8"]],[R[215]]]],[11,"into_vec",E,E,9,[[],[["u8"],["vec",["u8"]]]]],[11,R[23],E,E,9,[[["self"]],["osstr"]]],[11,R[23],E,E,11,[[["self"]],["path"]]],[11,"hash",E,E,11,[[["self"],["h"]]]],[11,"hash",E,E,9,[[["self"],["h"]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"hash",E,E,8,[[["self"],["h"]]]],[11,"from",E,E,11,[[[T]],[R[216]]]],[11,"from",E,"Converts a `PathBuf` into a `OsString`",9,[[[R[216]]],[R[215]]]],[11,"from",E,"Converts a `Box<Path>` into a `PathBuf`",11,[[["box",["path"]],["path"]],[R[216]]]],[11,"from",E,"Converts a [`Box`]`<`[`OsStr`]`>` into a `OsString`…",9,[[["box",["osstr"]],["osstr"]],[R[215]]]],[11,"from",E,E,9,[[[T]],[R[215]]]],[11,"from",E,"Converts a [`String`] into a [`OsString`].",9,[[["string"]],[R[215]]]],[11,"from",E,"Converts a `OsString` into a `PathBuf`",11,[[[R[215]]],[R[216]]]],[11,"from",E,E,9,[[["cow",["osstr"]],["osstr"]],[R[215]]]],[11,"from",E,E,11,[[["cow",["path"]],["path"]],[R[216]]]],[11,"from",E,"Converts a `String` into a `PathBuf`",11,[[["string"]],[R[216]]]],[11,R[21],E,E,8,[[["self"]],[R[215]]]],[11,R[22],E,E,8,[[["self"],[R[215]]]]],[11,R[21],E,E,10,[[["self"]],[R[216]]]],[11,R[22],E,E,10,[[[R[216]],["self"]]]],[11,R[31],E,E,11,[[],[R[216]]]],[11,R[31],E,"Constructs an empty `OsString`.",9,[[],[R[215]]]],[11,R[218],E,E,9,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,10,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["self"],["path"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["self"],[R[216]]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[[R[215]],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["self"],[R[216]]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["self"],["path"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["path"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["path"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[["path"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["str"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[[R[215]],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,"lt",E,E,9,[[[R[215]],["self"]],["bool"]]],[11,"le",E,E,9,[[[R[215]],["self"]],["bool"]]],[11,"gt",E,E,9,[[[R[215]],["self"]],["bool"]]],[11,"ge",E,E,9,[[[R[215]],["self"]],["bool"]]],[11,R[218],E,E,10,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,10,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[["str"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[[R[215]],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,"lt",E,E,8,[[["osstr"],["self"]],["bool"]]],[11,"le",E,E,8,[[["osstr"],["self"]],["bool"]]],[11,"gt",E,E,8,[[["osstr"],["self"]],["bool"]]],[11,"ge",E,E,8,[[["osstr"],["self"]],["bool"]]],[11,R[218],E,E,9,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,10,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,8,[[["cow"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[["self"],[R[216]]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,10,[[["path"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,10,[[["self"],[R[216]]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,10,[[[R[215]],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,9,[[["self"],["path"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[218],E,E,11,[[["osstr"],["self"]],[[R[124]],[R[15],[R[124]]]]]],[11,R[219],E,E,11,[[["i"]],[R[216]]]],[11,"fmt",E,E,7,[[["self"],[R[52]]],[[R[18],["error"]],["error"]]]],[11,"fmt",E,E,5,[[["self"],[R[52]]],[[R[18],["error"]],["error"]]]],[11,"call",R[214],E,0,[[["self"],[R[96]],[R[128]]],[["box",["future"]],["pin",["box"]]]]],[11,"uid",R[171],R[220],7,[[["self"]],["u32"]]],[11,"gid",E,R[221],7,[[["self"]],["u32"]]],[11,"pid",E,R[222],7,[[["self"]],["u32"]]],[11,R[223],E,R[224],7,[[["i32"],["self"]]]],[11,R[225],E,R[226],7,[[["self"]]]],[11,"new",E,"Coerces into an `OsStr` slice.",8,[[["s"]],["osstr"]]],[11,"to_str",E,"Yields a [`&str`] slice if the `OsStr` is valid Unicode.",8,[[["self"]],[["str"],[R[15],["str"]]]]],[11,R[228],E,"Converts an `OsStr` to a [`Cow`]`<`[`str`]`>`.",8,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_os_string",E,"Copies the slice into an owned [`OsString`].",8,[[["self"]],[R[215]]]],[11,"is_empty",E,"Checks whether the `OsStr` is empty.",8,[[["self"]],["bool"]]],[11,"len",E,"Returns the length of this `OsStr`.",8,[[["self"]],["usize"]]],[11,R[236],E,"Converts a [`Box`]`<OsStr>` into an [`OsString`] without…",8,[[["box",["osstr"]],["osstr"]],[R[215]]]],[11,"new",E,"Constructs a new empty `OsString`.",9,[[],[R[215]]]],[11,R[227],E,"Converts to an [`OsStr`] slice.",9,[[["self"]],["osstr"]]],[11,"into_string",E,"Converts the `OsString` into a [`String`] if it contains…",9,[[],[["string"],[R[215]],[R[18],["string",R[215]]]]]],[11,"push",E,"Extends the string with the given [`&OsStr`] slice.",9,[[["self"],[T]]]],[11,R[235],E,"Creates a new `OsString` with the given capacity.",9,[[["usize"]],[R[215]]]],[11,"clear",E,"Truncates the `OsString` to zero length.",9,[[["self"]]]],[11,"capacity",E,"Returns the capacity this `OsString` can hold without…",9,[[["self"]],["usize"]]],[11,"reserve",E,"Reserves capacity for at least `additional` more capacity…",9,[[["self"],["usize"]]]],[11,R[237],E,"Reserves the minimum capacity for exactly `additional`…",9,[[["self"],["usize"]]]],[11,R[238],E,"Shrinks the capacity of the `OsString` to match its length.",9,[[["self"]]]],[11,R[239],E,"Shrinks the capacity of the `OsString` with a lower bound.",9,[[["self"],["usize"]]]],[11,"into_boxed_os_str",E,"Converts this `OsString` into a boxed [`OsStr`].",9,[[],[["box",["osstr"]],["osstr"]]]],[11,"new",E,"Directly wraps a string slice as a `Path` slice.",10,[[["s"]],["path"]]],[11,R[227],E,"Yields the underlying [`OsStr`] slice.",10,[[["self"]],["osstr"]]],[11,"to_str",E,"Yields a [`&str`] slice if the `Path` is valid unicode.",10,[[["self"]],[["str"],[R[15],["str"]]]]],[11,R[228],E,"Converts a `Path` to a [`Cow<str>`].",10,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_path_buf",E,"Converts a `Path` to an owned [`PathBuf`].",10,[[["self"]],[R[216]]]],[11,"is_absolute",E,"Returns `true` if the `Path` is absolute, i.e., if it is…",10,[[["self"]],["bool"]]],[11,"is_relative",E,"Returns `true` if the `Path` is relative, i.e., not…",10,[[["self"]],["bool"]]],[11,"has_root",E,"Returns `true` if the `Path` has a root.",10,[[["self"]],["bool"]]],[11,R[89],E,"Returns the `Path` without its final component, if there…",10,[[["self"]],[["path"],[R[15],["path"]]]]],[11,R[229],E,"Produces an iterator over `Path` and its ancestors.",10,[[["self"]],[R[229]]]],[11,"file_name",E,"Returns the final component of the `Path`, if there is one.",10,[[["self"]],[["osstr"],[R[15],["osstr"]]]]],[11,"strip_prefix",E,"Returns a path that, when joined onto `base`, yields `self`.",10,[[["self"],["p"]],[["path"],[R[230]],[R[18],["path",R[230]]]]]],[11,"starts_with",E,"Determines whether `base` is a prefix of `self`.",10,[[["self"],["p"]],["bool"]]],[11,"ends_with",E,"Determines whether `child` is a suffix of `self`.",10,[[["self"],["p"]],["bool"]]],[11,"file_stem",E,"Extracts the stem (non-extension) portion of…",10,[[["self"]],[["osstr"],[R[15],["osstr"]]]]],[11,"extension",E,"Extracts the extension of [`self.file_name`], if possible.",10,[[["self"]],[["osstr"],[R[15],["osstr"]]]]],[11,"join",E,"Creates an owned [`PathBuf`] with `path` adjoined to `self`.",10,[[["self"],["p"]],[R[216]]]],[11,"with_file_name",E,R[231],10,[[["s"],["self"]],[R[216]]]],[11,"with_extension",E,R[231],10,[[["s"],["self"]],[R[216]]]],[11,R[232],E,"Produces an iterator over the [`Component`]s of the path.",10,[[["self"]],[R[232]]]],[11,"iter",E,"Produces an iterator over the path's components viewed as…",10,[[["self"]],["iter"]]],[11,"display",E,"Returns an object that implements [`Display`] for safely…",10,[[["self"]],["display"]]],[11,R[233],E,"Queries the file system to get information about a file,…",10,[[["self"]],[[R[18],[R[233],"error"]],[R[233]],["error"]]]],[11,"symlink_metadata",E,"Queries the metadata about a file without following…",10,[[["self"]],[[R[18],[R[233],"error"]],[R[233]],["error"]]]],[11,"canonicalize",E,"Returns the canonical, absolute form of the path with all…",10,[[["self"]],[[R[216]],[R[18],[R[216],"error"]],["error"]]]],[11,"read_link",E,"Reads a symbolic link, returning the file that the link…",10,[[["self"]],[[R[216]],[R[18],[R[216],"error"]],["error"]]]],[11,"read_dir",E,"Returns an iterator over the entries within a directory.",10,[[["self"]],[["error"],["readdir"],[R[18],["readdir","error"]]]]],[11,"exists",E,"Returns `true` if the path points at an existing entity.",10,[[["self"]],["bool"]]],[11,"is_file",E,R[234],10,[[["self"]],["bool"]]],[11,"is_dir",E,R[234],10,[[["self"]],["bool"]]],[11,"into_path_buf",E,"Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without…",10,[[["box",["path"]],["path"]],[R[216]]]],[11,"new",E,"Allocates an empty `PathBuf`.",11,[[],[R[216]]]],[11,R[235],E,"Creates a new `PathBuf` with a given capacity used to…",11,[[["usize"]],[R[216]]]],[11,"as_path",E,"Coerces to a [`Path`] slice.",11,[[["self"]],["path"]]],[11,"push",E,"Extends `self` with `path`.",11,[[["self"],["p"]]]],[11,"pop",E,"Truncates `self` to [`self.parent`].",11,[[["self"]],["bool"]]],[11,"set_file_name",E,"Updates [`self.file_name`] to `file_name`.",11,[[["self"],["s"]]]],[11,"set_extension",E,"Updates [`self.extension`] to `extension`.",11,[[["self"],["s"]],["bool"]]],[11,R[236],E,"Consumes the `PathBuf`, yielding its internal [`OsString`]…",11,[[],[R[215]]]],[11,"into_boxed_path",E,"Converts this `PathBuf` into a [boxed][`Box`] [`Path`].",11,[[],[["box",["path"]],["path"]]]],[11,"capacity",E,"Invokes [`capacity`] on the underlying instance of…",11,[[["self"]],["usize"]]],[11,"clear",E,"Invokes [`clear`] on the underlying instance of…",11,[[["self"]]]],[11,"reserve",E,"Invokes [`reserve`] on the underlying instance of…",11,[[["self"],["usize"]]]],[11,R[237],E,"Invokes [`reserve_exact`] on the underlying instance of…",11,[[["self"],["usize"]]]],[11,R[238],E,"Invokes [`shrink_to_fit`] on the underlying instance of…",11,[[["self"]]]],[11,R[239],E,"Invokes [`shrink_to`] on the underlying instance of…",11,[[["self"],["usize"]]]]],"p":[[3,"MemFS"],[8,"Future"],[8,R[240]],[8,R[241]],[8,R[148]],[4,R[129]],[8,"OsStrExt"],[3,"Context"],[3,"OsStr"],[3,"OsString"],[3,"Path"],[3,"PathBuf"]]};
searchIndex["polyfuse_sys"]={"doc":"A collection of FFI bindings for `polyfuse`.","i":[[0,"kernel","polyfuse_sys","FUSE application binary interface.",N,N],[3,R[25],"polyfuse_sys::kernel",E,N,N],[12,"ino",E,E,0,N],[12,"size",E,E,0,N],[12,R[0],E,E,0,N],[12,"atime",E,E,0,N],[12,"mtime",E,E,0,N],[12,"ctime",E,E,0,N],[12,R[3],E,E,0,N],[12,R[4],E,E,0,N],[12,R[5],E,E,0,N],[12,"mode",E,E,0,N],[12,"nlink",E,E,0,N],[12,"uid",E,E,0,N],[12,"gid",E,E,0,N],[12,"rdev",E,E,0,N],[12,"blksize",E,E,0,N],[12,R[2],E,E,0,N],[3,R[30],E,E,N,N],[12,"ino",E,E,1,N],[12,"off",E,E,1,N],[12,R[1],E,E,1,N],[12,"typ",E,E,1,N],[12,"name",E,E,1,N],[3,R[32],E,E,N,N],[12,"entry_out",E,E,2,N],[12,"dirent",E,E,2,N],[3,R[26],E,E,N,N],[12,R[0],E,E,3,N],[12,"bfree",E,E,3,N],[12,"bavail",E,E,3,N],[12,"files",E,E,3,N],[12,"ffree",E,E,3,N],[12,"bsize",E,E,3,N],[12,R[1],E,E,3,N],[12,"frsize",E,E,3,N],[12,R[2],E,E,3,N],[12,"spare",E,E,3,N],[3,R[27],E,E,N,N],[12,"start",E,E,4,N],[12,"end",E,E,4,N],[12,"typ",E,E,4,N],[12,"pid",E,E,4,N],[3,R[53],E,E,N,N],[12,"len",E,E,5,N],[12,"opcode",E,E,5,N],[12,"unique",E,E,5,N],[12,R[13],E,E,5,N],[12,"uid",E,E,5,N],[12,"gid",E,E,5,N],[12,"pid",E,E,5,N],[12,R[2],E,E,5,N],[3,R[54],E,E,N,N],[12,"major",E,E,6,N],[12,"minor",E,E,6,N],[12,R[12],E,E,6,N],[12,R[8],E,E,6,N],[3,R[55],E,E,N,N],[12,"nlookup",E,E,7,N],[3,R[56],E,E,N,N],[12,"getattr_flags",E,E,8,N],[12,"dummy",E,E,8,N],[12,"fh",E,E,8,N],[3,R[57],E,E,N,N],[12,"valid",E,E,9,N],[12,R[2],E,E,9,N],[12,"fh",E,E,9,N],[12,"size",E,E,9,N],[12,R[6],E,E,9,N],[12,"atime",E,E,9,N],[12,"mtime",E,E,9,N],[12,"ctime",E,E,9,N],[12,R[3],E,E,9,N],[12,R[4],E,E,9,N],[12,R[5],E,E,9,N],[12,"mode",E,E,9,N],[12,"unused4",E,E,9,N],[12,"uid",E,E,9,N],[12,"gid",E,E,9,N],[12,"unused5",E,E,9,N],[3,R[58],E,E,N,N],[12,"mode",E,E,10,N],[12,"rdev",E,E,10,N],[12,"umask",E,E,10,N],[12,R[2],E,E,10,N],[3,R[59],E,E,N,N],[12,"mode",E,E,11,N],[12,"umask",E,E,11,N],[3,R[60],E,E,N,N],[12,"newdir",E,E,12,N],[3,R[61],E,E,N,N],[12,"oldnodeid",E,E,13,N],[3,R[62],E,E,N,N],[12,R[8],E,E,14,N],[12,R[9],E,E,14,N],[3,R[63],E,E,N,N],[12,"fh",E,E,15,N],[12,R[7],E,E,15,N],[12,"size",E,E,15,N],[12,"read_flags",E,E,15,N],[12,R[6],E,E,15,N],[12,R[8],E,E,15,N],[12,R[2],E,E,15,N],[3,R[64],E,E,N,N],[12,"fh",E,E,16,N],[12,R[7],E,E,16,N],[12,"size",E,E,16,N],[12,"write_flags",E,E,16,N],[12,R[6],E,E,16,N],[12,R[8],E,E,16,N],[12,R[2],E,E,16,N],[3,R[65],E,E,N,N],[12,"fh",E,E,17,N],[12,R[9],E,E,17,N],[12,R[2],E,E,17,N],[12,R[6],E,E,17,N],[3,R[66],E,E,N,N],[12,"fh",E,E,18,N],[12,R[8],E,E,18,N],[12,"release_flags",E,E,18,N],[12,R[6],E,E,18,N],[3,R[67],E,E,N,N],[12,"fh",E,E,19,N],[12,"fsync_flags",E,E,19,N],[12,R[2],E,E,19,N],[3,R[68],E,E,N,N],[12,"size",E,E,20,N],[12,R[2],E,E,20,N],[3,R[69],E,E,N,N],[12,"size",E,E,21,N],[12,R[8],E,E,21,N],[3,R[70],E,E,N,N],[12,"fh",E,E,22,N],[12,"owner",E,E,22,N],[12,"lk",E,E,22,N],[12,"lk_flags",E,E,22,N],[12,R[2],E,E,22,N],[3,R[71],E,E,N,N],[12,"mask",E,E,23,N],[3,R[72],E,E,N,N],[12,R[8],E,E,24,N],[12,"mode",E,E,24,N],[12,"umask",E,E,24,N],[12,R[2],E,E,24,N],[3,R[73],E,E,N,N],[12,"block",E,E,25,N],[12,R[151],E,E,25,N],[12,R[2],E,E,25,N],[3,R[33],E,E,N,N],[12,"len",E,E,26,N],[12,"error",E,E,26,N],[12,"unique",E,E,26,N],[3,R[34],E,E,N,N],[12,R[10],E,E,27,N],[12,R[11],E,E,27,N],[12,"dummy",E,E,27,N],[12,"attr",E,E,27,N],[3,R[35],E,E,N,N],[12,R[13],E,E,28,N],[12,"generation",E,E,28,N],[12,R[100],E,E,28,N],[12,R[10],E,E,28,N],[12,"entry_valid_nsec",E,E,28,N],[12,R[11],E,E,28,N],[12,"attr",E,E,28,N],[3,R[74],E,E,N,N],[12,"major",E,E,29,N],[12,"minor",E,E,29,N],[12,R[12],E,E,29,N],[12,R[8],E,E,29,N],[12,R[152],E,E,29,N],[12,R[153],E,E,29,N],[12,R[14],E,E,29,N],[12,R[154],E,E,29,N],[12,"max_pages",E,E,29,N],[12,R[2],E,E,29,N],[12,R[9],E,E,29,N],[3,R[36],E,E,N,N],[12,"size",E,E,30,N],[12,R[2],E,E,30,N],[3,R[37],E,E,N,N],[12,"fh",E,E,31,N],[12,R[155],E,E,31,N],[12,R[2],E,E,31,N],[3,R[38],E,E,N,N],[12,"size",E,E,32,N],[12,R[2],E,E,32,N],[3,R[39],E,E,N,N],[12,"st",E,E,33,N],[3,R[40],E,E,N,N],[12,"lk",E,E,34,N],[3,R[41],E,E,N,N],[12,"block",E,E,35,N],[3,R[75],E,E,N,N],[12,"fh",E,E,36,N],[12,R[8],E,E,36,N],[12,"cmd",E,E,36,N],[12,"arg",E,E,36,N],[12,"in_size",E,E,36,N],[12,"out_size",E,E,36,N],[3,R[42],E,E,N,N],[12,R[18],E,E,37,N],[12,R[8],E,E,37,N],[12,"in_iovs",E,E,37,N],[12,"out_iovs",E,E,37,N],[3,R[43],E,E,N,N],[12,"base",E,E,38,N],[12,"len",E,E,38,N],[3,R[76],E,E,N,N],[12,"fh",E,E,39,N],[12,"kh",E,E,39,N],[12,R[8],E,E,39,N],[12,"events",E,E,39,N],[3,R[44],E,E,N,N],[12,"revents",E,E,40,N],[3,R[77],E,E,N,N],[12,"unique",E,E,41,N],[3,R[78],E,E,N,N],[12,"fh",E,E,42,N],[12,R[7],E,E,42,N],[12,"length",E,E,42,N],[12,"mode",E,E,42,N],[12,R[2],E,E,42,N],[3,R[79],E,E,N,N],[12,"count",E,E,43,N],[12,"dummy",E,E,43,N],[3,R[80],E,E,N,N],[12,R[13],E,E,44,N],[12,"nlookup",E,E,44,N],[3,R[81],E,E,N,N],[12,"newdir",E,E,45,N],[12,R[8],E,E,45,N],[12,R[2],E,E,45,N],[3,R[82],E,E,N,N],[12,"fh",E,E,46,N],[12,R[7],E,E,46,N],[12,"whence",E,E,46,N],[12,R[2],E,E,46,N],[3,R[45],E,E,N,N],[12,R[7],E,E,47,N],[3,R[83],E,E,N,N],[12,"fh_in",E,E,48,N],[12,"off_in",E,E,48,N],[12,"nodeid_out",E,E,48,N],[12,"fh_out",E,E,48,N],[12,"off_out",E,E,48,N],[12,"len",E,E,48,N],[12,R[8],E,E,48,N],[3,R[46],E,E,N,N],[12,"kh",E,E,49,N],[3,R[47],E,E,N,N],[12,"ino",E,E,50,N],[12,"off",E,E,50,N],[12,"len",E,E,50,N],[3,R[48],E,E,N,N],[12,R[89],E,E,51,N],[12,R[1],E,E,51,N],[12,R[2],E,E,51,N],[3,R[49],E,E,N,N],[12,R[89],E,E,52,N],[12,"child",E,E,52,N],[12,R[1],E,E,52,N],[12,R[2],E,E,52,N],[3,R[50],E,E,N,N],[12,R[13],E,E,53,N],[12,R[7],E,E,53,N],[12,"size",E,E,53,N],[12,R[2],E,E,53,N],[3,R[51],E,E,N,N],[12,"notify_unique",E,E,54,N],[12,R[13],E,E,54,N],[12,R[7],E,E,54,N],[12,"size",E,E,54,N],[12,R[2],E,E,54,N],[3,R[84],E,E,N,N],[12,"dummy1",E,E,55,N],[12,R[7],E,E,55,N],[12,"size",E,E,55,N],[12,"dummy2",E,E,55,N],[12,"dummy3",E,E,55,N],[12,"dummy4",E,E,55,N],[3,R[85],E,E,N,N],[12,"major",E,E,56,N],[12,"minor",E,E,56,N],[12,R[9],E,E,56,N],[12,R[8],E,E,56,N],[3,R[86],E,E,N,N],[12,"major",E,E,57,N],[12,"minor",E,E,57,N],[12,R[9],E,E,57,N],[12,R[8],E,E,57,N],[12,"max_read",E,E,57,N],[12,R[14],E,E,57,N],[12,"dev_major",E,E,57,N],[12,"dev_minor",E,E,57,N],[12,"spare",E,E,57,N],[4,R[28],E,E,N,N],[13,"FUSE_LOOKUP",E,E,58,N],[13,"FUSE_FORGET",E,E,58,N],[13,"FUSE_GETATTR",E,E,58,N],[13,"FUSE_SETATTR",E,E,58,N],[13,"FUSE_READLINK",E,E,58,N],[13,"FUSE_SYMLINK",E,E,58,N],[13,"FUSE_MKNOD",E,E,58,N],[13,"FUSE_MKDIR",E,E,58,N],[13,"FUSE_UNLINK",E,E,58,N],[13,"FUSE_RMDIR",E,E,58,N],[13,"FUSE_RENAME",E,E,58,N],[13,"FUSE_LINK",E,E,58,N],[13,"FUSE_OPEN",E,E,58,N],[13,"FUSE_READ",E,E,58,N],[13,"FUSE_WRITE",E,E,58,N],[13,"FUSE_STATFS",E,E,58,N],[13,"FUSE_RELEASE",E,E,58,N],[13,"FUSE_FSYNC",E,E,58,N],[13,"FUSE_SETXATTR",E,E,58,N],[13,"FUSE_GETXATTR",E,E,58,N],[13,"FUSE_LISTXATTR",E,E,58,N],[13,"FUSE_REMOVEXATTR",E,E,58,N],[13,"FUSE_FLUSH",E,E,58,N],[13,"FUSE_INIT",E,E,58,N],[13,"FUSE_OPENDIR",E,E,58,N],[13,"FUSE_READDIR",E,E,58,N],[13,"FUSE_RELEASEDIR",E,E,58,N],[13,"FUSE_FSYNCDIR",E,E,58,N],[13,"FUSE_GETLK",E,E,58,N],[13,"FUSE_SETLK",E,E,58,N],[13,"FUSE_SETLKW",E,E,58,N],[13,"FUSE_ACCESS",E,E,58,N],[13,"FUSE_CREATE",E,E,58,N],[13,"FUSE_INTERRUPT",E,E,58,N],[13,"FUSE_BMAP",E,E,58,N],[13,"FUSE_DESTROY",E,E,58,N],[13,"FUSE_IOCTL",E,E,58,N],[13,"FUSE_POLL",E,E,58,N],[13,"FUSE_NOTIFY_REPLY",E,E,58,N],[13,"FUSE_BATCH_FORGET",E,E,58,N],[13,"FUSE_FALLOCATE",E,E,58,N],[13,"FUSE_READDIRPLUS",E,E,58,N],[13,"FUSE_RENAME2",E,E,58,N],[13,"FUSE_LSEEK",E,E,58,N],[13,"FUSE_COPY_FILE_RANGE",E,E,58,N],[13,"CUSE_INIT",E,E,58,N],[4,R[29],E,E,N,N],[13,"FUSE_NOTIFY_POLL",E,E,59,N],[13,"FUSE_NOTIFY_INVAL_INODE",E,E,59,N],[13,"FUSE_NOTIFY_INVAL_ENTRY",E,E,59,N],[13,"FUSE_NOTIFY_STORE",E,E,59,N],[13,"FUSE_NOTIFY_RETRIEVE",E,E,59,N],[13,"FUSE_NOTIFY_DELETE",E,E,59,N],[13,"FUSE_NOTIFY_CODE_MAX",E,E,59,N],[17,"FUSE_KERNEL_VERSION",E,"The major version number of FUSE protocol.",N,N],[17,"FUSE_KERNEL_MINOR_VERSION",E,"The minor version number of FUSE protocol.",N,N],[17,"FUSE_MIN_READ_BUFFER",E,"The minimum length of read buffer.",N,N],[17,"FUSE_IOCTL_MAX_IOV",E,"Maximum of in_iovecs + out_iovecs",N,N],[17,"FATTR_MODE",E,E,N,N],[17,"FATTR_UID",E,E,N,N],[17,"FATTR_GID",E,E,N,N],[17,"FATTR_SIZE",E,E,N,N],[17,"FATTR_ATIME",E,E,N,N],[17,"FATTR_MTIME",E,E,N,N],[17,"FATTR_FH",E,E,N,N],[17,"FATTR_ATIME_NOW",E,E,N,N],[17,"FATTR_MTIME_NOW",E,E,N,N],[17,"FATTR_LOCKOWNER",E,E,N,N],[17,"FATTR_CTIME",E,E,N,N],[17,"FOPEN_DIRECT_IO",E,E,N,N],[17,"FOPEN_KEEP_CACHE",E,E,N,N],[17,"FOPEN_NONSEEKABLE",E,E,N,N],[17,"FOPEN_CACHE_DIR",E,E,N,N],[17,"FUSE_ASYNC_READ",E,E,N,N],[17,"FUSE_POSIX_LOCKS",E,E,N,N],[17,"FUSE_FILE_OPS",E,E,N,N],[17,"FUSE_ATOMIC_O_TRUNC",E,E,N,N],[17,"FUSE_EXPORT_SUPPORT",E,E,N,N],[17,"FUSE_BIG_WRITES",E,E,N,N],[17,"FUSE_DONT_MASK",E,E,N,N],[17,"FUSE_SPLICE_WRITE",E,E,N,N],[17,"FUSE_SPLICE_MOVE",E,E,N,N],[17,"FUSE_SPLICE_READ",E,E,N,N],[17,"FUSE_FLOCK_LOCKS",E,E,N,N],[17,"FUSE_HAS_IOCTL_DIR",E,E,N,N],[17,"FUSE_AUTO_INVAL_DATA",E,E,N,N],[17,"FUSE_DO_READDIRPLUS",E,E,N,N],[17,"FUSE_READDIRPLUS_AUTO",E,E,N,N],[17,"FUSE_ASYNC_DIO",E,E,N,N],[17,"FUSE_WRITEBACK_CACHE",E,E,N,N],[17,"FUSE_NO_OPEN_SUPPORT",E,E,N,N],[17,"FUSE_PARALLEL_DIROPS",E,E,N,N],[17,"FUSE_HANDLE_KILLPRIV",E,E,N,N],[17,"FUSE_POSIX_ACL",E,E,N,N],[17,"FUSE_ABORT_ERROR",E,E,N,N],[17,"FUSE_MAX_PAGES",E,E,N,N],[17,"FUSE_CACHE_SYMLINKS",E,E,N,N],[17,"FUSE_NO_OPENDIR_SUPPORT",E,E,N,N],[17,"CUSE_UNRESTRICTED_IOCTL",E,E,N,N],[17,"FUSE_RELEASE_FLUSH",E,E,N,N],[17,"FUSE_RELEASE_FLOCK_UNLOCK",E,E,N,N],[17,"FUSE_GETATTR_FH",E,E,N,N],[17,"FUSE_LK_FLOCK",E,E,N,N],[17,"FUSE_WRITE_CACHE",E,E,N,N],[17,"FUSE_WRITE_LOCKOWNER",E,E,N,N],[17,"FUSE_READ_LOCKOWNER",E,E,N,N],[17,"FUSE_IOCTL_COMPAT",E,E,N,N],[17,"FUSE_IOCTL_UNRESTRICTED",E,E,N,N],[17,"FUSE_IOCTL_RETRY",E,E,N,N],[17,"FUSE_IOCTL_32BIT",E,E,N,N],[17,"FUSE_IOCTL_DIR",E,E,N,N],[17,"FUSE_POLL_SCHEDULE_NOTIFY",E,E,N,N],[17,"FUSE_COMPAT_ENTRY_OUT_SIZE",E,E,N,N],[17,"FUSE_COMPAT_ATTR_OUT_SIZE",E,E,N,N],[17,"FUSE_COMPAT_MKNOD_IN_SIZE",E,E,N,N],[17,"FUSE_COMPAT_WRITE_IN_SIZE",E,E,N,N],[17,"FUSE_COMPAT_STATFS_SIZE",E,E,N,N],[17,"FUSE_COMPAT_INIT_OUT_SIZE",E,E,N,N],[17,"FUSE_COMPAT_22_INIT_OUT_SIZE",E,E,N,N],[17,"CUSE_INIT_INFO_MAX",E,E,N,N],[17,"FUSE_DEV_IOC_CLONE",E,E,N,N],[11,"fh",E,E,8,[[["self"]],[[R[15],["u64"]],["u64"]]]],[11,"fh",E,E,9,[[["self"]],[[R[15],["u64"]],["u64"]]]],[11,"size",E,E,9,[[["self"]],[[R[15],["u64"]],["u64"]]]],[11,R[6],E,E,9,[[["self"]],[[R[15],["u64"]],["u64"]]]],[11,"atime",E,E,9,[[["self"]],[R[15]]]],[11,"mtime",E,E,9,[[["self"]],[R[15]]]],[11,"ctime",E,E,9,[[["self"]],[R[15]]]],[11,"mode",E,"Returns the new file if specified.",9,[[["self"]],[[R[15],["u32"]],["u32"]]]],[11,"uid",E,"Returns the new UID if specified.",9,[[["self"]],[[R[15],["u32"]],["u32"]]]],[11,"gid",E,"Returns the new GID if specified.",9,[[["self"]],[[R[15],["u32"]],["u32"]]]],[11,R[6],E,E,15,[[["self"]],[[R[15],["u64"]],["u64"]]]],[11,R[6],E,E,16,[[["self"]],[[R[15],["u64"]],["u64"]]]],[11,"flush",E,E,18,[[["self"]],["bool"]]],[11,R[91],E,E,19,[[["self"]],["bool"]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[22],E,E,0,[[["self"],[T]]]],[11,R[16],E,E,0,[[[U]],[R[18]]]],[11,R[17],E,E,0,[[],[R[18]]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[16],E,E,1,[[[U]],[R[18]]]],[11,R[17],E,E,1,[[],[R[18]]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[16],E,E,2,[[[U]],[R[18]]]],[11,R[17],E,E,2,[[],[R[18]]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[22],E,E,3,[[["self"],[T]]]],[11,R[16],E,E,3,[[[U]],[R[18]]]],[11,R[17],E,E,3,[[],[R[18]]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[22],E,E,4,[[["self"],[T]]]],[11,R[16],E,E,4,[[[U]],[R[18]]]],[11,R[17],E,E,4,[[],[R[18]]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[24]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[16],E,E,5,[[[U]],[R[18]]]],[11,R[17],E,E,5,[[],[R[18]]]],[11,R[23],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[24]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[16],E,E,6,[[[U]],[R[18]]]],[11,R[17],E,E,6,[[],[R[18]]]],[11,R[23],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[R[24]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[16],E,E,7,[[[U]],[R[18]]]],[11,R[17],E,E,7,[[],[R[18]]]],[11,R[23],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[24]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[16],E,E,8,[[[U]],[R[18]]]],[11,R[17],E,E,8,[[],[R[18]]]],[11,R[23],E,E,8,[[["self"]],[T]]],[11,R[19],E,E,8,[[["self"]],[T]]],[11,R[20],E,E,8,[[["self"]],[R[24]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[16],E,E,9,[[[U]],[R[18]]]],[11,R[17],E,E,9,[[],[R[18]]]],[11,R[23],E,E,9,[[["self"]],[T]]],[11,R[19],E,E,9,[[["self"]],[T]]],[11,R[20],E,E,9,[[["self"]],[R[24]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[16],E,E,10,[[[U]],[R[18]]]],[11,R[17],E,E,10,[[],[R[18]]]],[11,R[23],E,E,10,[[["self"]],[T]]],[11,R[19],E,E,10,[[["self"]],[T]]],[11,R[20],E,E,10,[[["self"]],[R[24]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[16],E,E,11,[[[U]],[R[18]]]],[11,R[17],E,E,11,[[],[R[18]]]],[11,R[23],E,E,11,[[["self"]],[T]]],[11,R[19],E,E,11,[[["self"]],[T]]],[11,R[20],E,E,11,[[["self"]],[R[24]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[16],E,E,12,[[[U]],[R[18]]]],[11,R[17],E,E,12,[[],[R[18]]]],[11,R[23],E,E,12,[[["self"]],[T]]],[11,R[19],E,E,12,[[["self"]],[T]]],[11,R[20],E,E,12,[[["self"]],[R[24]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[16],E,E,13,[[[U]],[R[18]]]],[11,R[17],E,E,13,[[],[R[18]]]],[11,R[23],E,E,13,[[["self"]],[T]]],[11,R[19],E,E,13,[[["self"]],[T]]],[11,R[20],E,E,13,[[["self"]],[R[24]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[16],E,E,14,[[[U]],[R[18]]]],[11,R[17],E,E,14,[[],[R[18]]]],[11,R[23],E,E,14,[[["self"]],[T]]],[11,R[19],E,E,14,[[["self"]],[T]]],[11,R[20],E,E,14,[[["self"]],[R[24]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[16],E,E,15,[[[U]],[R[18]]]],[11,R[17],E,E,15,[[],[R[18]]]],[11,R[23],E,E,15,[[["self"]],[T]]],[11,R[19],E,E,15,[[["self"]],[T]]],[11,R[20],E,E,15,[[["self"]],[R[24]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[16],E,E,16,[[[U]],[R[18]]]],[11,R[17],E,E,16,[[],[R[18]]]],[11,R[23],E,E,16,[[["self"]],[T]]],[11,R[19],E,E,16,[[["self"]],[T]]],[11,R[20],E,E,16,[[["self"]],[R[24]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[16],E,E,17,[[[U]],[R[18]]]],[11,R[17],E,E,17,[[],[R[18]]]],[11,R[23],E,E,17,[[["self"]],[T]]],[11,R[19],E,E,17,[[["self"]],[T]]],[11,R[20],E,E,17,[[["self"]],[R[24]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[16],E,E,18,[[[U]],[R[18]]]],[11,R[17],E,E,18,[[],[R[18]]]],[11,R[23],E,E,18,[[["self"]],[T]]],[11,R[19],E,E,18,[[["self"]],[T]]],[11,R[20],E,E,18,[[["self"]],[R[24]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[16],E,E,19,[[[U]],[R[18]]]],[11,R[17],E,E,19,[[],[R[18]]]],[11,R[23],E,E,19,[[["self"]],[T]]],[11,R[19],E,E,19,[[["self"]],[T]]],[11,R[20],E,E,19,[[["self"]],[R[24]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[16],E,E,20,[[[U]],[R[18]]]],[11,R[17],E,E,20,[[],[R[18]]]],[11,R[23],E,E,20,[[["self"]],[T]]],[11,R[19],E,E,20,[[["self"]],[T]]],[11,R[20],E,E,20,[[["self"]],[R[24]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[16],E,E,21,[[[U]],[R[18]]]],[11,R[17],E,E,21,[[],[R[18]]]],[11,R[23],E,E,21,[[["self"]],[T]]],[11,R[19],E,E,21,[[["self"]],[T]]],[11,R[20],E,E,21,[[["self"]],[R[24]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[16],E,E,22,[[[U]],[R[18]]]],[11,R[17],E,E,22,[[],[R[18]]]],[11,R[23],E,E,22,[[["self"]],[T]]],[11,R[19],E,E,22,[[["self"]],[T]]],[11,R[20],E,E,22,[[["self"]],[R[24]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[16],E,E,23,[[[U]],[R[18]]]],[11,R[17],E,E,23,[[],[R[18]]]],[11,R[23],E,E,23,[[["self"]],[T]]],[11,R[19],E,E,23,[[["self"]],[T]]],[11,R[20],E,E,23,[[["self"]],[R[24]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[16],E,E,24,[[[U]],[R[18]]]],[11,R[17],E,E,24,[[],[R[18]]]],[11,R[23],E,E,24,[[["self"]],[T]]],[11,R[19],E,E,24,[[["self"]],[T]]],[11,R[20],E,E,24,[[["self"]],[R[24]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[16],E,E,25,[[[U]],[R[18]]]],[11,R[17],E,E,25,[[],[R[18]]]],[11,R[23],E,E,25,[[["self"]],[T]]],[11,R[19],E,E,25,[[["self"]],[T]]],[11,R[20],E,E,25,[[["self"]],[R[24]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[16],E,E,26,[[[U]],[R[18]]]],[11,R[17],E,E,26,[[],[R[18]]]],[11,R[23],E,E,26,[[["self"]],[T]]],[11,R[19],E,E,26,[[["self"]],[T]]],[11,R[20],E,E,26,[[["self"]],[R[24]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[16],E,E,27,[[[U]],[R[18]]]],[11,R[17],E,E,27,[[],[R[18]]]],[11,R[23],E,E,27,[[["self"]],[T]]],[11,R[19],E,E,27,[[["self"]],[T]]],[11,R[20],E,E,27,[[["self"]],[R[24]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[16],E,E,28,[[[U]],[R[18]]]],[11,R[17],E,E,28,[[],[R[18]]]],[11,R[23],E,E,28,[[["self"]],[T]]],[11,R[19],E,E,28,[[["self"]],[T]]],[11,R[20],E,E,28,[[["self"]],[R[24]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[16],E,E,29,[[[U]],[R[18]]]],[11,R[17],E,E,29,[[],[R[18]]]],[11,R[23],E,E,29,[[["self"]],[T]]],[11,R[19],E,E,29,[[["self"]],[T]]],[11,R[20],E,E,29,[[["self"]],[R[24]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[16],E,E,30,[[[U]],[R[18]]]],[11,R[17],E,E,30,[[],[R[18]]]],[11,R[23],E,E,30,[[["self"]],[T]]],[11,R[19],E,E,30,[[["self"]],[T]]],[11,R[20],E,E,30,[[["self"]],[R[24]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[16],E,E,31,[[[U]],[R[18]]]],[11,R[17],E,E,31,[[],[R[18]]]],[11,R[23],E,E,31,[[["self"]],[T]]],[11,R[19],E,E,31,[[["self"]],[T]]],[11,R[20],E,E,31,[[["self"]],[R[24]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[16],E,E,32,[[[U]],[R[18]]]],[11,R[17],E,E,32,[[],[R[18]]]],[11,R[23],E,E,32,[[["self"]],[T]]],[11,R[19],E,E,32,[[["self"]],[T]]],[11,R[20],E,E,32,[[["self"]],[R[24]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[16],E,E,33,[[[U]],[R[18]]]],[11,R[17],E,E,33,[[],[R[18]]]],[11,R[23],E,E,33,[[["self"]],[T]]],[11,R[19],E,E,33,[[["self"]],[T]]],[11,R[20],E,E,33,[[["self"]],[R[24]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[16],E,E,34,[[[U]],[R[18]]]],[11,R[17],E,E,34,[[],[R[18]]]],[11,R[23],E,E,34,[[["self"]],[T]]],[11,R[19],E,E,34,[[["self"]],[T]]],[11,R[20],E,E,34,[[["self"]],[R[24]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[16],E,E,35,[[[U]],[R[18]]]],[11,R[17],E,E,35,[[],[R[18]]]],[11,R[23],E,E,35,[[["self"]],[T]]],[11,R[19],E,E,35,[[["self"]],[T]]],[11,R[20],E,E,35,[[["self"]],[R[24]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[16],E,E,36,[[[U]],[R[18]]]],[11,R[17],E,E,36,[[],[R[18]]]],[11,R[23],E,E,36,[[["self"]],[T]]],[11,R[19],E,E,36,[[["self"]],[T]]],[11,R[20],E,E,36,[[["self"]],[R[24]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[16],E,E,37,[[[U]],[R[18]]]],[11,R[17],E,E,37,[[],[R[18]]]],[11,R[23],E,E,37,[[["self"]],[T]]],[11,R[19],E,E,37,[[["self"]],[T]]],[11,R[20],E,E,37,[[["self"]],[R[24]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[16],E,E,38,[[[U]],[R[18]]]],[11,R[17],E,E,38,[[],[R[18]]]],[11,R[23],E,E,38,[[["self"]],[T]]],[11,R[19],E,E,38,[[["self"]],[T]]],[11,R[20],E,E,38,[[["self"]],[R[24]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[16],E,E,39,[[[U]],[R[18]]]],[11,R[17],E,E,39,[[],[R[18]]]],[11,R[23],E,E,39,[[["self"]],[T]]],[11,R[19],E,E,39,[[["self"]],[T]]],[11,R[20],E,E,39,[[["self"]],[R[24]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[16],E,E,40,[[[U]],[R[18]]]],[11,R[17],E,E,40,[[],[R[18]]]],[11,R[23],E,E,40,[[["self"]],[T]]],[11,R[19],E,E,40,[[["self"]],[T]]],[11,R[20],E,E,40,[[["self"]],[R[24]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[16],E,E,41,[[[U]],[R[18]]]],[11,R[17],E,E,41,[[],[R[18]]]],[11,R[23],E,E,41,[[["self"]],[T]]],[11,R[19],E,E,41,[[["self"]],[T]]],[11,R[20],E,E,41,[[["self"]],[R[24]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[16],E,E,42,[[[U]],[R[18]]]],[11,R[17],E,E,42,[[],[R[18]]]],[11,R[23],E,E,42,[[["self"]],[T]]],[11,R[19],E,E,42,[[["self"]],[T]]],[11,R[20],E,E,42,[[["self"]],[R[24]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[16],E,E,43,[[[U]],[R[18]]]],[11,R[17],E,E,43,[[],[R[18]]]],[11,R[23],E,E,43,[[["self"]],[T]]],[11,R[19],E,E,43,[[["self"]],[T]]],[11,R[20],E,E,43,[[["self"]],[R[24]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[16],E,E,44,[[[U]],[R[18]]]],[11,R[17],E,E,44,[[],[R[18]]]],[11,R[23],E,E,44,[[["self"]],[T]]],[11,R[19],E,E,44,[[["self"]],[T]]],[11,R[20],E,E,44,[[["self"]],[R[24]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[16],E,E,45,[[[U]],[R[18]]]],[11,R[17],E,E,45,[[],[R[18]]]],[11,R[23],E,E,45,[[["self"]],[T]]],[11,R[19],E,E,45,[[["self"]],[T]]],[11,R[20],E,E,45,[[["self"]],[R[24]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[16],E,E,46,[[[U]],[R[18]]]],[11,R[17],E,E,46,[[],[R[18]]]],[11,R[23],E,E,46,[[["self"]],[T]]],[11,R[19],E,E,46,[[["self"]],[T]]],[11,R[20],E,E,46,[[["self"]],[R[24]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[16],E,E,47,[[[U]],[R[18]]]],[11,R[17],E,E,47,[[],[R[18]]]],[11,R[23],E,E,47,[[["self"]],[T]]],[11,R[19],E,E,47,[[["self"]],[T]]],[11,R[20],E,E,47,[[["self"]],[R[24]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[16],E,E,48,[[[U]],[R[18]]]],[11,R[17],E,E,48,[[],[R[18]]]],[11,R[23],E,E,48,[[["self"]],[T]]],[11,R[19],E,E,48,[[["self"]],[T]]],[11,R[20],E,E,48,[[["self"]],[R[24]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[16],E,E,49,[[[U]],[R[18]]]],[11,R[17],E,E,49,[[],[R[18]]]],[11,R[23],E,E,49,[[["self"]],[T]]],[11,R[19],E,E,49,[[["self"]],[T]]],[11,R[20],E,E,49,[[["self"]],[R[24]]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[16],E,E,50,[[[U]],[R[18]]]],[11,R[17],E,E,50,[[],[R[18]]]],[11,R[23],E,E,50,[[["self"]],[T]]],[11,R[19],E,E,50,[[["self"]],[T]]],[11,R[20],E,E,50,[[["self"]],[R[24]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[16],E,E,51,[[[U]],[R[18]]]],[11,R[17],E,E,51,[[],[R[18]]]],[11,R[23],E,E,51,[[["self"]],[T]]],[11,R[19],E,E,51,[[["self"]],[T]]],[11,R[20],E,E,51,[[["self"]],[R[24]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[16],E,E,52,[[[U]],[R[18]]]],[11,R[17],E,E,52,[[],[R[18]]]],[11,R[23],E,E,52,[[["self"]],[T]]],[11,R[19],E,E,52,[[["self"]],[T]]],[11,R[20],E,E,52,[[["self"]],[R[24]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[16],E,E,53,[[[U]],[R[18]]]],[11,R[17],E,E,53,[[],[R[18]]]],[11,R[23],E,E,53,[[["self"]],[T]]],[11,R[19],E,E,53,[[["self"]],[T]]],[11,R[20],E,E,53,[[["self"]],[R[24]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[16],E,E,54,[[[U]],[R[18]]]],[11,R[17],E,E,54,[[],[R[18]]]],[11,R[23],E,E,54,[[["self"]],[T]]],[11,R[19],E,E,54,[[["self"]],[T]]],[11,R[20],E,E,54,[[["self"]],[R[24]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[16],E,E,55,[[[U]],[R[18]]]],[11,R[17],E,E,55,[[],[R[18]]]],[11,R[23],E,E,55,[[["self"]],[T]]],[11,R[19],E,E,55,[[["self"]],[T]]],[11,R[20],E,E,55,[[["self"]],[R[24]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[16],E,E,56,[[[U]],[R[18]]]],[11,R[17],E,E,56,[[],[R[18]]]],[11,R[23],E,E,56,[[["self"]],[T]]],[11,R[19],E,E,56,[[["self"]],[T]]],[11,R[20],E,E,56,[[["self"]],[R[24]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[16],E,E,57,[[[U]],[R[18]]]],[11,R[17],E,E,57,[[],[R[18]]]],[11,R[23],E,E,57,[[["self"]],[T]]],[11,R[19],E,E,57,[[["self"]],[T]]],[11,R[20],E,E,57,[[["self"]],[R[24]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[21],E,E,58,[[["self"]],[T]]],[11,R[22],E,E,58,[[["self"],[T]]]],[11,R[16],E,E,58,[[[U]],[R[18]]]],[11,R[17],E,E,58,[[],[R[18]]]],[11,R[23],E,E,58,[[["self"]],[T]]],[11,R[19],E,E,58,[[["self"]],[T]]],[11,R[20],E,E,58,[[["self"]],[R[24]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[21],E,E,59,[[["self"]],[T]]],[11,R[22],E,E,59,[[["self"],[T]]]],[11,R[16],E,E,59,[[[U]],[R[18]]]],[11,R[17],E,E,59,[[],[R[18]]]],[11,R[23],E,E,59,[[["self"]],[T]]],[11,R[19],E,E,59,[[["self"]],[T]]],[11,R[20],E,E,59,[[["self"]],[R[24]]]],[11,"clone",E,E,0,[[["self"]],[R[25]]]],[11,"clone",E,E,3,[[["self"]],[R[26]]]],[11,"clone",E,E,4,[[["self"]],[R[27]]]],[11,"clone",E,E,58,[[["self"]],[R[28]]]],[11,"clone",E,E,59,[[["self"]],[R[29]]]],[11,R[31],E,E,0,[[],[R[25]]]],[11,R[31],E,E,1,[[],[R[30]]]],[11,R[31],E,E,2,[[],[R[32]]]],[11,R[31],E,E,3,[[],[R[26]]]],[11,R[31],E,E,4,[[],[R[27]]]],[11,R[31],E,E,26,[[],[R[33]]]],[11,R[31],E,E,27,[[],[R[34]]]],[11,R[31],E,E,28,[[],[R[35]]]],[11,R[31],E,E,29,[[],["self"]]],[11,R[31],E,E,30,[[],[R[36]]]],[11,R[31],E,E,31,[[],[R[37]]]],[11,R[31],E,E,32,[[],[R[38]]]],[11,R[31],E,E,33,[[],[R[39]]]],[11,R[31],E,E,34,[[],[R[40]]]],[11,R[31],E,E,35,[[],[R[41]]]],[11,R[31],E,E,37,[[],[R[42]]]],[11,R[31],E,E,38,[[],[R[43]]]],[11,R[31],E,E,40,[[],[R[44]]]],[11,R[31],E,E,47,[[],[R[45]]]],[11,R[31],E,E,49,[[],[R[46]]]],[11,R[31],E,E,50,[[],[R[47]]]],[11,R[31],E,E,51,[[],[R[48]]]],[11,R[31],E,E,52,[[],[R[49]]]],[11,R[31],E,E,53,[[],[R[50]]]],[11,R[31],E,E,54,[[],[R[51]]]],[11,"eq",E,E,58,[[["self"],[R[28]]],["bool"]]],[11,"eq",E,E,59,[[[R[29]],["self"]],["bool"]]],[11,"fmt",E,E,0,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,1,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,2,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,3,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,4,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,58,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,5,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,6,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,7,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,8,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,9,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,10,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,11,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,12,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,13,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,14,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,15,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,16,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,17,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,18,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,19,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,20,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,21,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,22,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,23,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,24,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,25,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,26,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,27,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,28,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,29,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,30,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,31,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,32,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,33,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,34,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,35,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,36,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,37,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,38,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,39,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,40,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,41,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,42,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,43,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,44,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,45,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,46,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,47,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,48,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,59,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,49,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,50,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,51,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,52,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,53,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,54,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,55,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,56,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,57,[[[R[52]],["self"]],[R[18]]]],[11,R[16],E,E,58,[[["u32"]],[R[18]]]],[11,"hash",E,E,58,[[["self"],["__h"]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]]],"p":[[3,R[25]],[3,R[30]],[3,R[32]],[3,R[26]],[3,R[27]],[3,R[53]],[3,R[54]],[3,R[55]],[3,R[56]],[3,R[57]],[3,R[58]],[3,R[59]],[3,R[60]],[3,R[61]],[3,R[62]],[3,R[63]],[3,R[64]],[3,R[65]],[3,R[66]],[3,R[67]],[3,R[68]],[3,R[69]],[3,R[70]],[3,R[71]],[3,R[72]],[3,R[73]],[3,R[33]],[3,R[34]],[3,R[35]],[3,R[74]],[3,R[36]],[3,R[37]],[3,R[38]],[3,R[39]],[3,R[40]],[3,R[41]],[3,R[75]],[3,R[42]],[3,R[43]],[3,R[76]],[3,R[44]],[3,R[77]],[3,R[78]],[3,R[79]],[3,R[80]],[3,R[81]],[3,R[82]],[3,R[45]],[3,R[83]],[3,R[46]],[3,R[47]],[3,R[48]],[3,R[49]],[3,R[50]],[3,R[51]],[3,R[84]],[3,R[85]],[3,R[86]],[4,R[28]],[4,R[29]]]};
searchIndex["polyfuse_tokio"]={"doc":"Components for using `polyfuse` filesystem with Tokio…","i":[[3,"Channel","polyfuse_tokio","Asynchronous I/O object that communicates with the FUSE…",N,N],[3,R[161],E,E,N,N],[3,R[92],E,"Notification sender to the kernel.",N,N],[3,R[130],E,"A handle for awaiting the result of a `retrieve`…",N,N],[3,"Server",E,"FUSE filesystem server.",N,N],[5,"run",E,"Run a FUSE filesystem daemon mounted onto the specified…",N,[[["f"]]]],[11,"open",E,"Establish a connection with the FUSE kernel driver.",0,[[["path"],[R[156]]],[R[18]]]],[11,"try_clone",E,"Attempt to create a clone of this channel.",0,[[["self"]],[R[18]]]],[11,"options",E,E,1,[[["self"]],[[R[15],["osstr"]],["osstr"]]]],[11,"set_options",E,E,1,[[["self"]]]],[11,"mount",E,"Create a FUSE server mounted on the specified path.",2,[[[R[156]]]]],[11,R[157],E,"Create an instance of `Notifier` associated with this…",2,[[["self"]],[[R[18],[R[157]]],[R[157]]]]],[11,"run",E,"Run a FUSE filesystem daemon.",2,[[["f"]]]],[11,"run_until",E,"Run a FUSE filesystem until the specified signal is…",2,[[["s"],["f"]]]],[11,R[158],E,E,3,[[["i64"],["u64"],["self"]]]],[11,R[159],E,E,3,[[["u64"],["self"]]]],[11,"delete",E,E,3,[[["u64"],["self"]]]],[11,"store",E,E,3,[[["u64"],["self"]]]],[11,"retrieve",E,E,3,[[["u32"],["u64"],["self"]]]],[11,R[160],E,E,3,[[["u64"],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[16],E,E,0,[[[U]],[R[18]]]],[11,R[17],E,E,0,[[],[R[18]]]],[11,R[23],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[24]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[16],E,E,1,[[[U]],[R[18]]]],[11,R[17],E,E,1,[[],[R[18]]]],[11,R[23],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[24]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[16],E,E,3,[[[U]],[R[18]]]],[11,R[17],E,E,3,[[],[R[18]]]],[11,R[23],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[24]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[16],E,E,4,[[[U]],[R[18]]]],[11,R[17],E,E,4,[[],[R[18]]]],[11,R[23],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[24]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[16],E,E,2,[[[U]],[R[18]]]],[11,R[17],E,E,2,[[],[R[18]]]],[11,R[23],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[24]]]],[11,R[31],E,E,1,[[],[R[156]]]],[11,"fmt",E,E,0,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,1,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,2,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,3,[[[R[52]],["self"]],[R[18]]]],[11,"fmt",E,E,4,[[[R[52]],["self"]],[R[18]]]],[11,"poll",E,E,4,[[["pin"],["self"],[R[96]]],["poll"]]],[11,R[126],E,E,4,[[["self"]],["bool"]]],[11,"poll_read",E,E,0,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["usize"]]]]],[11,"poll_read_vectored",E,E,0,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["usize"]]]]],[11,R[242],E,E,0,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["usize"]]]]],[11,R[243],E,E,0,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18],["usize"]]]]],[11,R[244],E,E,0,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18]]]]],[11,R[245],E,E,0,[[["pin"],["self"],[R[96]]],[["poll",[R[18]]],[R[18]]]]]],"p":[[3,"Channel"],[3,R[161]],[3,"Server"],[3,R[92]],[3,R[130]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
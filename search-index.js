var N=null,E="",T="t",U="u",searchIndex={};
var R=["Forget","Notifier","Notification sender.","session","Notify the invalidation about a directory entry to the…","polyfuse","Lookup","Getattr","Setattr","Readlink","Setxattr","Getxattr","Listxattr","Removexattr","Releasedir","Fsyncdir","Fallocate","CopyFileRange","Operation","The kind of FUSE requests received from the kernel.","Look up a directory entry by name.","Forget about inodes removed from the kernel's internal…","Get file attributes.","Set file attributes.","Read a symbolic link.","Symlink","Create a symbolic link","Create a file node.","Create a directory.","Remove a file.","Remove a directory.","Rename a file.","Create a hard link.","Open a file.","Read data from an opened file.","Write data to an opened file.","Release","Release an opened file.","Get the filesystem statistics.","Synchronize the file contents of an opened file.","Set an extended attribute.","Get an extended attribute.","List extended attribute names.","Remove an extended attribute.","Close a file descriptor.","Opendir","Open a directory.","Readdir","Read contents from an opened directory.","Release an opened directory.","Synchronize an opened directory contents.","Test for a POSIX file lock.","Acquire, modify or release a POSIX file lock.","Acquire, modify or release a BSD file lock.","Check file access permissions.","Create and open a file.","Map block index within a file to block index within device.","Allocate requested space to an opened file.","Copy a range of data from an opened file to another.","Poll for readiness.","option","context","parent","newparent","lock_owner","reply_vectored","reply_size","datasync","filelock","fileattr","attr_valid","Set the file handle.","requestheader","result","request","set_blocks","offset","capabilityflags","max_readahead","max_write","Buffer that stores FUSE requests.","The remaining part of request data.","Return a reference to the header part of received request.","poll_ready","Prepare the buffer to receive the specified amount of data.","poll_receive","Transfer one request queued in the kernel driver into this…","Extract the content of request from the buffer.","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","polyfuse::notify","polyfuse::op","polyfuse::reply","polyfuse::request","readdirmode","default","ordering","formatter","intoiterator","is_terminated","Handle a FUSE request from the kernel and reply with its…","operation","RetrieveHandle","ReaddirMode","ReplyAttr","ReplyEntry","ReplyOpen","ReplyWrite","ReplyOpendir","ReplyXattr","ReplyStatfs","ReplyBmap","ReplyPoll","BytesBuffer","SessionInitializer","ConnectionInfo","CapabilityFlags","Filesystem","Interrupt","RequestHeader","mountoptions","notifier","inval_inode","inval_entry","poll_wakeup","MountOptions","polyfuse_examples","Wrap this future in an `Either` future, making it the…","Flatten the execution of this future when the successful…","Wrap the future in a Box, pinning it.","Turns a `Future<Output = T>` into a `TryFuture<Ok = T,…","async_trait","Contextural information about an incoming request.","The filesystem running on the user space.","polyfuse_examples::memfs","polyfuse_examples::prelude","from_bytes","osstring","pathbuf","partial_cmp","from_iter","load_attr","store_attr","Return the user ID of the calling process.","Return the group ID of the calling process.","Return the process ID of the calling process.","reply_err","Reply to the kernel with an error code.","on_interrupt","Register the request with the sesssion and get a signal…","is_empty","as_os_str","to_string_lossy","ancestors","stripprefixerror","Creates an owned [`PathBuf`] like `self` but with the…","components","metadata","Returns `true` if the path exists on disk and is pointing…","with_capacity","into_os_string","reserve_exact","shrink_to_fit","shrink_to","Directory","INodeTable","FutureExt","AsyncWrite","poll_write","poll_write_vectored","poll_flush","poll_close"];
searchIndex["polyfuse"]={"doc":"A FUSE (Filesystem in userspace) framework.","i":[[23,R[137],R[5],"A re-export of [`async_trait`] for implementing…",N,N],[3,"FileAttr",E,"Attributes about a file.",N,N],[3,"FileLock",E,"File lock information.",N,N],[3,R[0],E,"A forget information.",N,N],[3,"StatFs",E,"Filesystem statistics.",N,N],[3,"DirEntry",E,"A directory entry.",N,N],[3,"Context",E,R[138],N,N],[3,R[122],E,"Capability flags to control the behavior of the kernel…",N,N],[3,R[121],E,"Information about the connection associated with a session.",N,N],[3,R[120],E,"Session initializer.",N,N],[3,R[1],E,R[2],N,N],[3,R[124],E,"A future for awaiting an interrupt signal sent to a request.",N,N],[3,"Session",E,"FUSE session driver.",N,N],[4,R[18],E,R[19],N,N],[13,R[6],E,R[20],0,N],[13,R[0],E,R[21],0,N],[13,R[7],E,R[22],0,N],[13,R[8],E,R[23],0,N],[13,R[9],E,R[24],0,N],[13,R[25],E,R[26],0,N],[13,"Mknod",E,R[27],0,N],[13,"Mkdir",E,R[28],0,N],[13,"Unlink",E,R[29],0,N],[13,"Rmdir",E,R[30],0,N],[13,"Rename",E,R[31],0,N],[13,"Link",E,R[32],0,N],[13,"Open",E,R[33],0,N],[13,"Read",E,R[34],0,N],[13,"Write",E,R[35],0,N],[13,R[36],E,R[37],0,N],[13,"Statfs",E,R[38],0,N],[13,"Fsync",E,R[39],0,N],[13,R[10],E,R[40],0,N],[13,R[11],E,R[41],0,N],[13,R[12],E,R[42],0,N],[13,R[13],E,R[43],0,N],[13,"Flush",E,R[44],0,N],[13,R[45],E,R[46],0,N],[13,R[47],E,R[48],0,N],[13,R[14],E,R[49],0,N],[13,R[15],E,R[50],0,N],[13,"Getlk",E,R[51],0,N],[13,"Setlk",E,R[52],0,N],[13,"Flock",E,R[53],0,N],[13,"Access",E,R[54],0,N],[13,"Create",E,R[55],0,N],[13,"Bmap",E,R[56],0,N],[13,R[16],E,R[57],0,N],[13,R[17],E,R[58],0,N],[13,"Poll",E,R[59],0,N],[0,"notify",E,"Send notification to the kernel.",N,N],[3,R[1],R[96],R[2],N,N],[3,R[108],E,"A handle for awaiting a result of `notify_retrieve`.",N,N],[11,"new",E,"Create a new `Notifier`.",1,[[],["self"]]],[11,R[128],E,"Notify the cache invalidation about an inode to the kernel.",1,[[["u64"],["self"],["i64"],["w"],[R[3]]]]],[11,R[129],E,R[4],1,[[["u64"],["self"],["w"],[R[3]]]]],[11,"delete",E,R[4],1,[[["u64"],["self"],["w"],[R[3]]]]],[11,"store",E,"Push the data in an inode for updating the kernel cache.",1,[[["u64"],["self"],["w"],[R[3]]]]],[11,"retrieve",E,"Retrieve data in an inode from the kernel cache.",1,[[["u64"],["self"],["u32"],["w"],[R[3]]]]],[11,R[130],E,"Send I/O readiness to the kernel.",1,[[["u64"],["self"],["w"],[R[3]]]]],[11,"unique",E,"Return the unique ID of the notification.",2,[[["self"]],["u64"]]],[0,"op",R[5],"Filesystem operations.",N,N],[3,R[6],R[97],E,N,N],[3,R[7],E,E,N,N],[3,R[8],E,E,N,N],[3,R[9],E,E,N,N],[3,R[25],E,E,N,N],[3,"Mknod",E,E,N,N],[3,"Mkdir",E,E,N,N],[3,"Unlink",E,E,N,N],[3,"Rmdir",E,E,N,N],[3,"Rename",E,E,N,N],[3,"Link",E,E,N,N],[3,"Open",E,E,N,N],[3,"Read",E,E,N,N],[3,"Write",E,E,N,N],[3,R[36],E,E,N,N],[3,"Statfs",E,E,N,N],[3,"Fsync",E,E,N,N],[3,R[10],E,E,N,N],[3,R[11],E,E,N,N],[3,R[12],E,E,N,N],[3,R[13],E,E,N,N],[3,"Flush",E,E,N,N],[3,R[45],E,E,N,N],[3,R[47],E,E,N,N],[3,R[14],E,E,N,N],[3,R[15],E,E,N,N],[3,"Getlk",E,E,N,N],[3,"Setlk",E,E,N,N],[3,"Flock",E,E,N,N],[3,"Access",E,E,N,N],[3,"Create",E,E,N,N],[3,"Bmap",E,E,N,N],[3,R[16],E,E,N,N],[3,R[17],E,E,N,N],[3,"Poll",E,E,N,N],[4,R[18],E,R[19],N,N],[13,R[6],E,R[20],0,N],[13,R[0],E,R[21],0,N],[13,R[7],E,R[22],0,N],[13,R[8],E,R[23],0,N],[13,R[9],E,R[24],0,N],[13,R[25],E,R[26],0,N],[13,"Mknod",E,R[27],0,N],[13,"Mkdir",E,R[28],0,N],[13,"Unlink",E,R[29],0,N],[13,"Rmdir",E,R[30],0,N],[13,"Rename",E,R[31],0,N],[13,"Link",E,R[32],0,N],[13,"Open",E,R[33],0,N],[13,"Read",E,R[34],0,N],[13,"Write",E,R[35],0,N],[13,R[36],E,R[37],0,N],[13,"Statfs",E,R[38],0,N],[13,"Fsync",E,R[39],0,N],[13,R[10],E,R[40],0,N],[13,R[11],E,R[41],0,N],[13,R[12],E,R[42],0,N],[13,R[13],E,R[43],0,N],[13,"Flush",E,R[44],0,N],[13,R[45],E,R[46],0,N],[13,R[47],E,R[48],0,N],[13,R[14],E,R[49],0,N],[13,R[15],E,R[50],0,N],[13,"Getlk",E,R[51],0,N],[13,"Setlk",E,R[52],0,N],[13,"Flock",E,R[53],0,N],[13,"Access",E,R[54],0,N],[13,"Create",E,R[55],0,N],[13,"Bmap",E,R[56],0,N],[13,R[16],E,R[57],0,N],[13,R[17],E,R[58],0,N],[13,"Poll",E,R[59],0,N],[4,R[109],E,E,N,N],[13,"Normal",E,E,3,N],[13,"Plus",E,E,3,N],[11,R[62],E,E,4,[[["self"]],["u64"]]],[11,"name",E,E,4,[[["self"]],["osstr"]]],[11,"reply",E,E,4,[[[R[61]]]]],[11,"ino",E,E,5,[[["self"]],["u64"]]],[11,"fh",E,E,5,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"reply",E,E,5,[[[R[61]]]]],[11,"ino",E,E,6,[[["self"]],["u64"]]],[11,"fh",E,E,6,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"mode",E,E,6,[[["self"]],[[R[60],["u32"]],["u32"]]]],[11,"uid",E,E,6,[[["self"]],[[R[60],["u32"]],["u32"]]]],[11,"gid",E,E,6,[[["self"]],[[R[60],["u32"]],["u32"]]]],[11,"size",E,E,6,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"atime",E,E,6,[[["self"]],[R[60]]]],[11,"mtime",E,E,6,[[["self"]],[R[60]]]],[11,"ctime",E,E,6,[[["self"]],[R[60]]]],[11,R[64],E,E,6,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"reply",E,E,6,[[[R[61]]]]],[11,"ino",E,E,7,[[["self"]],["u64"]]],[11,"reply",E,"Reply to the kernel with the specified link value.",7,[[[R[61]]]]],[11,R[62],E,E,8,[[["self"]],["u64"]]],[11,"name",E,E,8,[[["self"]],["osstr"]]],[11,"link",E,E,8,[[["self"]],["osstr"]]],[11,"reply",E,E,8,[[[R[61]]]]],[11,R[62],E,E,9,[[["self"]],["u64"]]],[11,"name",E,E,9,[[["self"]],["osstr"]]],[11,"mode",E,E,9,[[["self"]],["u32"]]],[11,"rdev",E,E,9,[[["self"]],["u32"]]],[11,"umask",E,E,9,[[["self"]],["u32"]]],[11,"reply",E,E,9,[[[R[61]]]]],[11,R[62],E,E,10,[[["self"]],["u64"]]],[11,"name",E,E,10,[[["self"]],["osstr"]]],[11,"mode",E,E,10,[[["self"]],["u32"]]],[11,"umask",E,E,10,[[["self"]],["u32"]]],[11,"reply",E,E,10,[[[R[61]]]]],[11,R[62],E,E,11,[[["self"]],["u64"]]],[11,"name",E,E,11,[[["self"]],["osstr"]]],[11,"reply",E,E,11,[[[R[61]]]]],[11,R[62],E,E,12,[[["self"]],["u64"]]],[11,"name",E,E,12,[[["self"]],["osstr"]]],[11,"reply",E,E,12,[[[R[61]]]]],[11,R[62],E,E,13,[[["self"]],["u64"]]],[11,"name",E,E,13,[[["self"]],["osstr"]]],[11,R[63],E,E,13,[[["self"]],["u64"]]],[11,"newname",E,E,13,[[["self"]],["osstr"]]],[11,"flags",E,E,13,[[["self"]],["u32"]]],[11,"reply",E,E,13,[[[R[61]]]]],[11,"ino",E,E,14,[[["self"]],["u64"]]],[11,R[63],E,E,14,[[["self"]],["u64"]]],[11,"newname",E,E,14,[[["self"]],["osstr"]]],[11,"reply",E,E,14,[[[R[61]]]]],[11,"ino",E,E,15,[[["self"]],["u64"]]],[11,"flags",E,E,15,[[["self"]],["u32"]]],[11,"reply",E,E,15,[[[R[61]]]]],[11,"ino",E,E,16,[[["self"]],["u64"]]],[11,"fh",E,E,16,[[["self"]],["u64"]]],[11,R[76],E,E,16,[[["self"]],["u64"]]],[11,"size",E,E,16,[[["self"]],["u32"]]],[11,"flags",E,E,16,[[["self"]],["u32"]]],[11,R[64],E,E,16,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"reply",E,E,16,[[[R[61]]]]],[11,R[65],E,E,16,[[[R[61]]]]],[11,"ino",E,E,17,[[["self"]],["u64"]]],[11,"fh",E,E,17,[[["self"]],["u64"]]],[11,R[76],E,E,17,[[["self"]],["u64"]]],[11,"size",E,E,17,[[["self"]],["u32"]]],[11,"flags",E,E,17,[[["self"]],["u32"]]],[11,R[64],E,E,17,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"reply",E,E,17,[[[R[61]]]]],[11,"ino",E,E,18,[[["self"]],["u64"]]],[11,"fh",E,E,18,[[["self"]],["u64"]]],[11,"flags",E,E,18,[[["self"]],["u32"]]],[11,R[64],E,E,18,[[["self"]],["u64"]]],[11,"flush",E,E,18,[[["self"]],["bool"]]],[11,"flock_release",E,E,18,[[["self"]],["bool"]]],[11,"reply",E,E,18,[[[R[61]]]]],[11,"ino",E,E,19,[[["self"]],["u64"]]],[11,"reply",E,E,19,[[[R[61]]]]],[11,"ino",E,E,20,[[["self"]],["u64"]]],[11,"fh",E,E,20,[[["self"]],["u64"]]],[11,R[67],E,E,20,[[["self"]],["bool"]]],[11,"reply",E,E,20,[[[R[61]]]]],[11,"ino",E,E,21,[[["self"]],["u64"]]],[11,"name",E,E,21,[[["self"]],["osstr"]]],[11,"value",E,E,21,[[["self"]]]],[11,"flags",E,E,21,[[["self"]],["u32"]]],[11,"reply",E,E,21,[[[R[61]]]]],[11,"ino",E,E,22,[[["self"]],["u64"]]],[11,"name",E,E,22,[[["self"]],["osstr"]]],[11,"size",E,E,22,[[["self"]],["u32"]]],[11,R[66],E,E,22,[[[R[61]]]]],[11,"reply",E,E,22,[[[R[61]]]]],[11,R[65],E,E,22,[[[R[61]]]]],[11,"ino",E,E,23,[[["self"]],["u64"]]],[11,"size",E,E,23,[[["self"]],["u32"]]],[11,R[66],E,E,23,[[[R[61]]]]],[11,"reply",E,E,23,[[[R[61]]]]],[11,R[65],E,E,23,[[[R[61]]]]],[11,"ino",E,E,24,[[["self"]],["u64"]]],[11,"name",E,E,24,[[["self"]],["osstr"]]],[11,"reply",E,E,24,[[[R[61]]]]],[11,"ino",E,E,25,[[["self"]],["u64"]]],[11,"fh",E,E,25,[[["self"]],["u64"]]],[11,R[64],E,E,25,[[["self"]],["u64"]]],[11,"reply",E,E,25,[[[R[61]]]]],[11,"ino",E,E,26,[[["self"]],["u64"]]],[11,"flags",E,E,26,[[["self"]],["u32"]]],[11,"reply",E,E,26,[[[R[61]]]]],[11,"ino",E,E,27,[[["self"]],["u64"]]],[11,"fh",E,E,27,[[["self"]],["u64"]]],[11,R[76],E,E,27,[[["self"]],["u64"]]],[11,"size",E,E,27,[[["self"]],["u32"]]],[11,"mode",E,E,27,[[["self"]],[R[100]]]],[11,"reply",E,E,27,[[[R[61]]]]],[11,R[65],E,E,27,[[[R[61]]]]],[11,"ino",E,E,28,[[["self"]],["u64"]]],[11,"fh",E,E,28,[[["self"]],["u64"]]],[11,"flags",E,E,28,[[["self"]],["u32"]]],[11,"reply",E,E,28,[[[R[61]]]]],[11,"ino",E,E,29,[[["self"]],["u64"]]],[11,"fh",E,E,29,[[["self"]],["u64"]]],[11,R[67],E,E,29,[[["self"]],["bool"]]],[11,"reply",E,E,29,[[[R[61]]]]],[11,"ino",E,E,30,[[["self"]],["u64"]]],[11,"fh",E,E,30,[[["self"]],["u64"]]],[11,"owner",E,E,30,[[["self"]],["u64"]]],[11,"lk",E,E,30,[[["self"]],[R[68]]]],[11,"reply",E,E,30,[[[R[61]]]]],[11,"ino",E,E,31,[[["self"]],["u64"]]],[11,"fh",E,E,31,[[["self"]],["u64"]]],[11,"owner",E,E,31,[[["self"]],["u64"]]],[11,"lk",E,E,31,[[["self"]],[R[68]]]],[11,"sleep",E,E,31,[[["self"]],["bool"]]],[11,"reply",E,E,31,[[[R[61]]]]],[11,"ino",E,E,32,[[["self"]],["u64"]]],[11,"fh",E,E,32,[[["self"]],["u64"]]],[11,"owner",E,E,32,[[["self"]],["u64"]]],[11,"op",E,E,32,[[["self"]],[[R[60],["u32"]],["u32"]]]],[11,"reply",E,E,32,[[[R[61]]]]],[11,"ino",E,E,33,[[["self"]],["u64"]]],[11,"mask",E,E,33,[[["self"]],["u32"]]],[11,"reply",E,E,33,[[[R[61]]]]],[11,R[62],E,E,34,[[["self"]],["u64"]]],[11,"name",E,E,34,[[["self"]],["osstr"]]],[11,"mode",E,E,34,[[["self"]],["u32"]]],[11,"umask",E,E,34,[[["self"]],["u32"]]],[11,"open_flags",E,E,34,[[["self"]],["u32"]]],[11,"reply",E,E,34,[[[R[61]]]]],[11,"ino",E,E,35,[[["self"]],["u64"]]],[11,"block",E,E,35,[[["self"]],["u64"]]],[11,"blocksize",E,E,35,[[["self"]],["u32"]]],[11,"reply",E,E,35,[[[R[61]]]]],[11,"ino",E,E,36,[[["self"]],["u64"]]],[11,"fh",E,E,36,[[["self"]],["u64"]]],[11,R[76],E,E,36,[[["self"]],["u64"]]],[11,"length",E,E,36,[[["self"]],["u64"]]],[11,"mode",E,E,36,[[["self"]],["u32"]]],[11,"reply",E,E,36,[[[R[61]]]]],[11,"input",E,E,37,[[["self"]]]],[11,"output",E,E,37,[[["self"]]]],[11,"length",E,E,37,[[["self"]],["u64"]]],[11,"flags",E,E,37,[[["self"]],["u64"]]],[11,"reply",E,E,37,[[[R[61]]]]],[11,"ino",E,E,38,[[["self"]],["u64"]]],[11,"fh",E,E,38,[[["self"]],["u64"]]],[11,"events",E,E,38,[[["self"]],["u32"]]],[11,"kh",E,E,38,[[["self"]],[["u64"],[R[60],["u64"]]]]],[11,"reply",E,E,38,[[[R[61]]]]],[0,"reply",R[5],"Replies to the kernel.",N,N],[3,R[110],R[98],"Reply with the inode attributes.",N,N],[3,R[111],E,"Reply with entry params.",N,N],[3,R[112],E,"Reply with an opened file.",N,N],[3,R[113],E,"Reply with the information about written data.",N,N],[3,R[114],E,"Reply with an opened directory.",N,N],[3,R[115],E,"Reply to a request about extended attributes.",N,N],[3,R[116],E,"Reply with the filesystem staticstics.",N,N],[3,"ReplyLk",E,"Reply with a file lock.",N,N],[3,R[117],E,"Reply with the mapped block index.",N,N],[3,R[118],E,"Reply with the poll result.",N,N],[11,"new",E,"Create a new `ReplyAttr`.",39,[[[R[69]]],["self"]]],[11,"attr",E,"Set the attribute value.",39,[[["self"],[R[69]]]]],[11,R[70],E,"Set the validity timeout for attributes.",39,[[["self"],["u64"],["u32"]]]],[11,"new",E,"Create a new `ReplyEntry`.",40,[[[R[69]]],["self"]]],[11,"attr",E,"Set the attribute value of this entry.",40,[[["self"],[R[69]]]]],[11,R[70],E,"Set the validity timeout for inode attributes.",40,[[["self"],["u64"],["u32"]]]],[11,"entry_valid",E,"Set the validity timeout for the name.",40,[[["self"],["u64"],["u32"]]]],[11,"generation",E,"Sets the generation of this entry.",40,[[["self"],["u64"]]]],[11,"new",E,"Create a new `ReplyOpen`.",41,[[["u64"]],["self"]]],[11,"fh",E,R[71],41,[[["self"],["u64"]]]],[11,"direct_io",E,"Indicates that the direct I/O is used on this file.",41,[[["self"],["bool"]]]],[11,"keep_cache",E,"Indicates that the currently cached file data in the…",41,[[["self"],["bool"]]]],[11,"nonseekable",E,"Indicates that the opened file is not seekable.",41,[[["self"],["bool"]]]],[11,"new",E,"Create a new `ReplyWrite`.",42,[[["u32"]],["self"]]],[11,"size",E,"Set the size of written bytes.",42,[[["self"],["u32"]]]],[11,"new",E,"Create a new `ReplyOpendir`",43,[[["u64"]],["self"]]],[11,"fh",E,R[71],43,[[["self"],["u64"]]]],[11,"cache_dir",E,"Enable caching of entries returned by `readdir`.",43,[[["self"],["bool"]]]],[11,"new",E,"Create a new `ReplyXattr`.",44,[[["u32"]],["self"]]],[11,"size",E,"Set the actual size of attribute value.",44,[[["self"],["u32"]]]],[11,"new",E,"Create a new `ReplyStatfs`.",45,[[["statfs"]],["self"]]],[11,"stat",E,"Set the value of filesystem statistics.",45,[[["self"],["statfs"]]]],[11,"new",E,"Create a new `ReplyLk`.",46,[[[R[68]]],["self"]]],[11,"lock",E,"Set the lock information.",46,[[["self"],[R[68]]]]],[11,"new",E,"Create a new `ReplyBmap`.",47,[[["u64"]],["self"]]],[11,"block",E,"Set the index of mapped block.",47,[[["self"],["u64"]]]],[11,"new",E,"Create a new `ReplyPoll`.",48,[[["u32"]],["self"]]],[11,"revents",E,"Set the mask of ready events.",48,[[["self"],["u32"]]]],[0,R[74],R[5],"Receives and parses FUSE requests.",N,N],[3,R[119],R[99],"A `Buffer` that stores a FUSE request in memory.",N,N],[3,"Request",E,"A FUSE request.",N,N],[3,R[125],E,"The header part of a FUSE request.",N,N],[8,"Buffer",E,R[80],N,N],[16,"Data",E,R[81],49,N],[10,"header",E,R[82],49,[[["self"]],[[R[72]],[R[60],[R[72]]]]]],[10,R[83],E,R[84],49,[[["usize"],[R[61]],["pin"],["self"]],[["poll",[R[73]]],[R[73]]]]],[10,R[85],E,R[86],49,[[["pin"],[R[61]],["r"],["pin"],["self"]],[["poll",[R[73]]],[R[73]]]]],[10,"extract",E,R[87],49,[[["self"]],[[R[73],[R[74]]],[R[74]]]]],[11,"new",E,"Create a new `BytesBuffer` with the specified buffer size.",50,[[["usize"]],["self"]]],[11,"ino",R[5],E,51,[[["self"]],["u64"]]],[11,"set_ino",E,E,51,[[["self"],["u64"]]]],[11,"size",E,E,51,[[["self"]],["u64"]]],[11,"set_size",E,E,51,[[["self"],["u64"]]]],[11,"blocks",E,E,51,[[["self"]],["u64"]]],[11,R[75],E,E,51,[[["self"],["u64"]]]],[11,"mode",E,E,51,[[["self"]],["u32"]]],[11,"set_mode",E,E,51,[[["self"],["u32"]]]],[11,"nlink",E,E,51,[[["self"]],["u32"]]],[11,"set_nlink",E,E,51,[[["self"],["u32"]]]],[11,"uid",E,E,51,[[["self"]],["u32"]]],[11,"set_uid",E,E,51,[[["self"],["u32"]]]],[11,"gid",E,E,51,[[["self"]],["u32"]]],[11,"set_gid",E,E,51,[[["self"],["u32"]]]],[11,"rdev",E,E,51,[[["self"]],["u32"]]],[11,"set_rdev",E,E,51,[[["self"],["u32"]]]],[11,"blksize",E,E,51,[[["self"]],["u32"]]],[11,"set_blksize",E,E,51,[[["self"],["u32"]]]],[11,"atime",E,E,51,[[["self"]]]],[11,"set_atime",E,E,51,[[["self"],["u64"],["u32"]]]],[11,"mtime",E,E,51,[[["self"]]]],[11,"set_mtime",E,E,51,[[["self"],["u64"],["u32"]]]],[11,"ctime",E,E,51,[[["self"]]]],[11,"set_ctime",E,E,51,[[["self"],["u64"],["u32"]]]],[11,"start",E,E,52,[[["self"]],["u64"]]],[11,"set_start",E,E,52,[[["self"],["u64"]]]],[11,"end",E,E,52,[[["self"]],["u64"]]],[11,"set_end",E,E,52,[[["self"],["u64"]]]],[11,"typ",E,E,52,[[["self"]],["u32"]]],[11,"set_typ",E,E,52,[[["self"],["u32"]]]],[11,"pid",E,E,52,[[["self"]],["u32"]]],[11,"set_pid",E,E,52,[[["self"],["u32"]]]],[11,"blocks",E,E,53,[[["self"]],["u64"]]],[11,R[75],E,E,53,[[["self"],["u64"]]]],[11,"bfree",E,E,53,[[["self"]],["u64"]]],[11,"set_bfree",E,E,53,[[["self"],["u64"]]]],[11,"bavail",E,E,53,[[["self"]],["u64"]]],[11,"set_bavail",E,E,53,[[["self"],["u64"]]]],[11,"files",E,E,53,[[["self"]],["u64"]]],[11,"set_files",E,E,53,[[["self"],["u64"]]]],[11,"ffree",E,E,53,[[["self"]],["u64"]]],[11,"set_ffree",E,E,53,[[["self"],["u64"]]]],[11,"bsize",E,E,53,[[["self"]],["u32"]]],[11,"set_bsize",E,E,53,[[["self"],["u32"]]]],[11,"namelen",E,E,53,[[["self"]],["u32"]]],[11,"set_namelen",E,E,53,[[["self"],["u32"]]]],[11,"frsize",E,E,53,[[["self"]],["u32"]]],[11,"set_frsize",E,E,53,[[["self"],["u32"]]]],[11,"ino",E,E,54,[[["self"]],["u64"]]],[11,"nlookup",E,E,54,[[["self"]],["u64"]]],[11,"new",E,E,55,[[["u64"]],["self"]]],[11,"dir",E,E,55,[[["u64"]],["self"]]],[11,"file",E,E,55,[[["u64"]],["self"]]],[11,"nodeid",E,E,55,[[["self"]],["u64"]]],[11,"set_nodeid",E,E,55,[[["self"],["u64"]]]],[11,R[76],E,E,55,[[["self"]],["u64"]]],[11,"set_offset",E,E,55,[[["self"],["u64"]]]],[11,"typ",E,E,55,[[["self"]],["u32"]]],[11,"set_typ",E,E,55,[[["self"],["u32"]]]],[11,"name",E,E,55,[[["self"]],["osstr"]]],[11,"set_name",E,E,55,[[["self"]]]],[11,"uid",E,R[149],56,[[["self"]],["u32"]]],[11,"gid",E,R[150],56,[[["self"]],["u32"]]],[11,"pid",E,R[151],56,[[["self"]],["u32"]]],[11,R[152],E,R[153],56,[[["i32"],["self"]]]],[11,R[154],E,R[155],56,[[["self"]]]],[11,"flags",E,"Return a reference to the capability flags.",57,[[["self"]],[R[77]]]],[11,R[78],E,"Set the maximum readahead.",57,[[["self"],["u32"]],["self"]]],[11,R[79],E,"Set the maximum size of the write buffer.",57,[[["self"],["u32"]],["self"]]],[11,"max_background",E,"Return the maximum number of pending background requests.",57,[[["u16"],["self"]],["self"]]],[11,"congestion_threshold",E,"Set the threshold number of pending background requests…",57,[[["u16"],["self"]],["self"]]],[11,"time_gran",E,"Set the timestamp resolution supported by the filesystem.",57,[[["self"],["u32"]],["self"]]],[11,"init",E,"Start a new FUSE session.",57,[[["i"]]]],[11,"proto_major",E,"Returns the major version of the protocol.",58,[[["self"]],["u32"]]],[11,"proto_minor",E,"Returns the minor version of the protocol.",58,[[["self"]],["u32"]]],[11,"flags",E,"Return a set of capability flags sent to the kernel driver.",58,[[["self"]],[R[77]]]],[11,"no_open_support",E,"Return whether the kernel supports for zero-message opens.",58,[[["self"]],["bool"]]],[11,"no_opendir_support",E,"Return whether the kernel supports for zero-message…",58,[[["self"]],["bool"]]],[11,R[78],E,"Returns the maximum readahead.",58,[[["self"]],["u32"]]],[11,R[79],E,"Returns the maximum size of the write buffer.",58,[[["self"]],["u32"]]],[18,"ASYNC_READ",E,"The filesystem supports asynchronous read requests.",59,N],[18,"ATOMIC_O_TRUNC",E,"The filesystem supports the `O_TRUNC` open flag.",59,N],[18,"AUTO_INVAL_DATA",E,"The kernel check the validity of attributes on every read.",59,N],[18,"ASYNC_DIO",E,"The filesystem supports asynchronous direct I/O submission.",59,N],[18,"PARALLEL_DIROPS",E,"The kernel supports parallel directory operations.",59,N],[18,"HANDLE_KILLPRIV",E,"The filesystem is responsible for unsetting setuid and…",59,N],[18,"POSIX_LOCKS",E,"The filesystem supports the POSIX-style file lock.",59,N],[18,"FLOCK_LOCKS",E,"The filesystem supports the `flock` handling.",59,N],[18,"EXPORT_SUPPORT",E,"The filesystem supports lookups of `\".\"` and `\"..\"`.",59,N],[18,"DONT_MASK",E,"The kernel should not apply the umask to the file mode on…",59,N],[18,"WRITEBACK_CACHE",E,"The writeback caching should be enabled.",59,N],[18,"POSIX_ACL",E,"The filesystem supports POSIX access control lists.",59,N],[18,"READDIRPLUS",E,"The filesystem supports `readdirplus` operations.",59,N],[18,"READDIRPLUS_AUTO",E,"Indicates that the kernel uses the adaptive readdirplus.",59,N],[11,"empty",E,"Returns an empty set of flags",59,[[],[R[77]]]],[11,"all",E,"Returns the set containing all flags.",59,[[],[R[77]]]],[11,"bits",E,"Returns the raw value of the flags currently stored.",59,[[["self"]],["u32"]]],[11,"from_bits",E,"Convert from underlying bit representation, unless that…",59,[[["u32"]],[[R[77]],[R[60],[R[77]]]]]],[11,"from_bits_truncate",E,"Convert from underlying bit representation, dropping any…",59,[[["u32"]],[R[77]]]],[11,"from_bits_unchecked",E,"Convert from underlying bit representation, preserving all…",59,[[["u32"]],[R[77]]]],[11,R[156],E,"Returns `true` if no flags are currently stored.",59,[[["self"]],["bool"]]],[11,"is_all",E,"Returns `true` if all flags are currently set.",59,[[["self"]],["bool"]]],[11,"intersects",E,"Returns `true` if there are flags common to both `self`…",59,[[[R[77]],["self"]],["bool"]]],[11,"contains",E,"Returns `true` all of the flags in `other` are contained…",59,[[[R[77]],["self"]],["bool"]]],[11,"insert",E,"Inserts the specified flags in-place.",59,[[["self"],[R[77]]]]],[11,"remove",E,"Removes the specified flags in-place.",59,[[["self"],[R[77]]]]],[11,"toggle",E,"Toggles the specified flags in-place.",59,[[["self"],[R[77]]]]],[11,"set",E,"Inserts or removes the specified flags depending on the…",59,[[["self"],[R[77]],["bool"]]]],[11,"connection_info",E,"Returns the information about the FUSE connection.",60,[[["self"]],["connectioninfo"]]],[11,"buffer_size",E,"Returns the buffer size required to receive one request.",60,[[["self"]],["usize"]]],[11,"receive",E,"Receive one or more requests from the kernel.",60,[[["self"],[R[127]],["b"],["r"]]]],[11,"process",E,"Process an incoming request using the specified filesystem…",60,[[["w"],["self"],["b"],["f"]]]],[8,R[123],E,R[139],N,N],[11,"call",E,R[106],61,[[["self"],[R[107]],[R[61]]],[["pin",["box"]],["box",["future"]]]]],[8,"Buffer",E,R[80],N,N],[16,"Data",E,R[81],49,N],[10,"header",E,R[82],49,[[["self"]],[[R[72]],[R[60],[R[72]]]]]],[10,R[83],E,R[84],49,[[["usize"],[R[61]],["pin"],["self"]],[["poll",[R[73]]],[R[73]]]]],[10,R[85],E,R[86],49,[[["pin"],[R[61]],["r"],["pin"],["self"]],[["poll",[R[73]]],[R[73]]]]],[10,"extract",E,R[87],49,[[["self"]],[[R[73],[R[74]]],[R[74]]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[88],E,E,51,[[["self"]],[T]]],[11,R[89],E,E,51,[[["self"],[T]]]],[11,R[90],E,E,51,[[[U]],[R[73]]]],[11,R[91],E,E,51,[[],[R[73]]]],[11,R[94],E,E,51,[[["self"]],[T]]],[11,R[92],E,E,51,[[["self"]],[T]]],[11,R[93],E,E,51,[[["self"]],[R[95]]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[88],E,E,52,[[["self"]],[T]]],[11,R[89],E,E,52,[[["self"],[T]]]],[11,R[90],E,E,52,[[[U]],[R[73]]]],[11,R[91],E,E,52,[[],[R[73]]]],[11,R[94],E,E,52,[[["self"]],[T]]],[11,R[92],E,E,52,[[["self"]],[T]]],[11,R[93],E,E,52,[[["self"]],[R[95]]]],[11,"into",E,E,54,[[],[U]]],[11,"from",E,E,54,[[[T]],[T]]],[11,R[90],E,E,54,[[[U]],[R[73]]]],[11,R[91],E,E,54,[[],[R[73]]]],[11,R[94],E,E,54,[[["self"]],[T]]],[11,R[92],E,E,54,[[["self"]],[T]]],[11,R[93],E,E,54,[[["self"]],[R[95]]]],[11,"into",E,E,53,[[],[U]]],[11,"from",E,E,53,[[[T]],[T]]],[11,R[88],E,E,53,[[["self"]],[T]]],[11,R[89],E,E,53,[[["self"],[T]]]],[11,R[90],E,E,53,[[[U]],[R[73]]]],[11,R[91],E,E,53,[[],[R[73]]]],[11,R[94],E,E,53,[[["self"]],[T]]],[11,R[92],E,E,53,[[["self"]],[T]]],[11,R[93],E,E,53,[[["self"]],[R[95]]]],[11,"into",E,E,55,[[],[U]]],[11,"from",E,E,55,[[[T]],[T]]],[11,R[90],E,E,55,[[[U]],[R[73]]]],[11,R[91],E,E,55,[[],[R[73]]]],[11,R[94],E,E,55,[[["self"]],[T]]],[11,R[92],E,E,55,[[["self"]],[T]]],[11,R[93],E,E,55,[[["self"]],[R[95]]]],[11,"into",E,E,56,[[],[U]]],[11,"from",E,E,56,[[[T]],[T]]],[11,R[90],E,E,56,[[[U]],[R[73]]]],[11,R[91],E,E,56,[[],[R[73]]]],[11,R[94],E,E,56,[[["self"]],[T]]],[11,R[92],E,E,56,[[["self"]],[T]]],[11,R[93],E,E,56,[[["self"]],[R[95]]]],[11,"into",E,E,59,[[],[U]]],[11,"from",E,E,59,[[[T]],[T]]],[11,R[88],E,E,59,[[["self"]],[T]]],[11,R[89],E,E,59,[[["self"],[T]]]],[11,R[90],E,E,59,[[[U]],[R[73]]]],[11,R[91],E,E,59,[[],[R[73]]]],[11,R[94],E,E,59,[[["self"]],[T]]],[11,R[92],E,E,59,[[["self"]],[T]]],[11,R[93],E,E,59,[[["self"]],[R[95]]]],[11,"into",E,E,58,[[],[U]]],[11,"from",E,E,58,[[[T]],[T]]],[11,R[90],E,E,58,[[[U]],[R[73]]]],[11,R[91],E,E,58,[[],[R[73]]]],[11,R[94],E,E,58,[[["self"]],[T]]],[11,R[92],E,E,58,[[["self"]],[T]]],[11,R[93],E,E,58,[[["self"]],[R[95]]]],[11,"into",E,E,57,[[],[U]]],[11,"from",E,E,57,[[[T]],[T]]],[11,R[90],E,E,57,[[[U]],[R[73]]]],[11,R[91],E,E,57,[[],[R[73]]]],[11,R[94],E,E,57,[[["self"]],[T]]],[11,R[92],E,E,57,[[["self"]],[T]]],[11,R[93],E,E,57,[[["self"]],[R[95]]]],[11,"into",R[96],E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[90],E,E,1,[[[U]],[R[73]]]],[11,R[91],E,E,1,[[],[R[73]]]],[11,R[94],E,E,1,[[["self"]],[T]]],[11,R[92],E,E,1,[[["self"]],[T]]],[11,R[93],E,E,1,[[["self"]],[R[95]]]],[11,"into",R[5],E,62,[[],[U]]],[11,"from",E,E,62,[[[T]],[T]]],[11,R[90],E,E,62,[[[U]],[R[73]]]],[11,R[91],E,E,62,[[],[R[73]]]],[11,R[94],E,E,62,[[["self"]],[T]]],[11,R[92],E,E,62,[[["self"]],[T]]],[11,R[93],E,E,62,[[["self"]],[R[95]]]],[11,"into",E,E,60,[[],[U]]],[11,"from",E,E,60,[[[T]],[T]]],[11,R[90],E,E,60,[[[U]],[R[73]]]],[11,R[91],E,E,60,[[],[R[73]]]],[11,R[94],E,E,60,[[["self"]],[T]]],[11,R[92],E,E,60,[[["self"]],[T]]],[11,R[93],E,E,60,[[["self"]],[R[95]]]],[11,"into",R[97],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[90],E,E,0,[[[U]],[R[73]]]],[11,R[91],E,E,0,[[],[R[73]]]],[11,R[94],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,[[["self"]],[T]]],[11,R[93],E,E,0,[[["self"]],[R[95]]]],[11,"into",R[96],E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[90],E,E,2,[[[U]],[R[73]]]],[11,R[91],E,E,2,[[],[R[73]]]],[11,R[94],E,E,2,[[["self"]],[T]]],[11,R[92],E,E,2,[[["self"]],[T]]],[11,R[93],E,E,2,[[["self"]],[R[95]]]],[11,"into",R[97],E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[90],E,E,4,[[[U]],[R[73]]]],[11,R[91],E,E,4,[[],[R[73]]]],[11,R[94],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,[[["self"]],[T]]],[11,R[93],E,E,4,[[["self"]],[R[95]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[90],E,E,5,[[[U]],[R[73]]]],[11,R[91],E,E,5,[[],[R[73]]]],[11,R[94],E,E,5,[[["self"]],[T]]],[11,R[92],E,E,5,[[["self"]],[T]]],[11,R[93],E,E,5,[[["self"]],[R[95]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[90],E,E,6,[[[U]],[R[73]]]],[11,R[91],E,E,6,[[],[R[73]]]],[11,R[94],E,E,6,[[["self"]],[T]]],[11,R[92],E,E,6,[[["self"]],[T]]],[11,R[93],E,E,6,[[["self"]],[R[95]]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[90],E,E,7,[[[U]],[R[73]]]],[11,R[91],E,E,7,[[],[R[73]]]],[11,R[94],E,E,7,[[["self"]],[T]]],[11,R[92],E,E,7,[[["self"]],[T]]],[11,R[93],E,E,7,[[["self"]],[R[95]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[90],E,E,8,[[[U]],[R[73]]]],[11,R[91],E,E,8,[[],[R[73]]]],[11,R[94],E,E,8,[[["self"]],[T]]],[11,R[92],E,E,8,[[["self"]],[T]]],[11,R[93],E,E,8,[[["self"]],[R[95]]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[90],E,E,9,[[[U]],[R[73]]]],[11,R[91],E,E,9,[[],[R[73]]]],[11,R[94],E,E,9,[[["self"]],[T]]],[11,R[92],E,E,9,[[["self"]],[T]]],[11,R[93],E,E,9,[[["self"]],[R[95]]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[90],E,E,10,[[[U]],[R[73]]]],[11,R[91],E,E,10,[[],[R[73]]]],[11,R[94],E,E,10,[[["self"]],[T]]],[11,R[92],E,E,10,[[["self"]],[T]]],[11,R[93],E,E,10,[[["self"]],[R[95]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[90],E,E,11,[[[U]],[R[73]]]],[11,R[91],E,E,11,[[],[R[73]]]],[11,R[94],E,E,11,[[["self"]],[T]]],[11,R[92],E,E,11,[[["self"]],[T]]],[11,R[93],E,E,11,[[["self"]],[R[95]]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[90],E,E,12,[[[U]],[R[73]]]],[11,R[91],E,E,12,[[],[R[73]]]],[11,R[94],E,E,12,[[["self"]],[T]]],[11,R[92],E,E,12,[[["self"]],[T]]],[11,R[93],E,E,12,[[["self"]],[R[95]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[90],E,E,13,[[[U]],[R[73]]]],[11,R[91],E,E,13,[[],[R[73]]]],[11,R[94],E,E,13,[[["self"]],[T]]],[11,R[92],E,E,13,[[["self"]],[T]]],[11,R[93],E,E,13,[[["self"]],[R[95]]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[90],E,E,14,[[[U]],[R[73]]]],[11,R[91],E,E,14,[[],[R[73]]]],[11,R[94],E,E,14,[[["self"]],[T]]],[11,R[92],E,E,14,[[["self"]],[T]]],[11,R[93],E,E,14,[[["self"]],[R[95]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[90],E,E,15,[[[U]],[R[73]]]],[11,R[91],E,E,15,[[],[R[73]]]],[11,R[94],E,E,15,[[["self"]],[T]]],[11,R[92],E,E,15,[[["self"]],[T]]],[11,R[93],E,E,15,[[["self"]],[R[95]]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[90],E,E,16,[[[U]],[R[73]]]],[11,R[91],E,E,16,[[],[R[73]]]],[11,R[94],E,E,16,[[["self"]],[T]]],[11,R[92],E,E,16,[[["self"]],[T]]],[11,R[93],E,E,16,[[["self"]],[R[95]]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[90],E,E,17,[[[U]],[R[73]]]],[11,R[91],E,E,17,[[],[R[73]]]],[11,R[94],E,E,17,[[["self"]],[T]]],[11,R[92],E,E,17,[[["self"]],[T]]],[11,R[93],E,E,17,[[["self"]],[R[95]]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[90],E,E,18,[[[U]],[R[73]]]],[11,R[91],E,E,18,[[],[R[73]]]],[11,R[94],E,E,18,[[["self"]],[T]]],[11,R[92],E,E,18,[[["self"]],[T]]],[11,R[93],E,E,18,[[["self"]],[R[95]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[90],E,E,19,[[[U]],[R[73]]]],[11,R[91],E,E,19,[[],[R[73]]]],[11,R[94],E,E,19,[[["self"]],[T]]],[11,R[92],E,E,19,[[["self"]],[T]]],[11,R[93],E,E,19,[[["self"]],[R[95]]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[90],E,E,20,[[[U]],[R[73]]]],[11,R[91],E,E,20,[[],[R[73]]]],[11,R[94],E,E,20,[[["self"]],[T]]],[11,R[92],E,E,20,[[["self"]],[T]]],[11,R[93],E,E,20,[[["self"]],[R[95]]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[90],E,E,21,[[[U]],[R[73]]]],[11,R[91],E,E,21,[[],[R[73]]]],[11,R[94],E,E,21,[[["self"]],[T]]],[11,R[92],E,E,21,[[["self"]],[T]]],[11,R[93],E,E,21,[[["self"]],[R[95]]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[90],E,E,22,[[[U]],[R[73]]]],[11,R[91],E,E,22,[[],[R[73]]]],[11,R[94],E,E,22,[[["self"]],[T]]],[11,R[92],E,E,22,[[["self"]],[T]]],[11,R[93],E,E,22,[[["self"]],[R[95]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[90],E,E,23,[[[U]],[R[73]]]],[11,R[91],E,E,23,[[],[R[73]]]],[11,R[94],E,E,23,[[["self"]],[T]]],[11,R[92],E,E,23,[[["self"]],[T]]],[11,R[93],E,E,23,[[["self"]],[R[95]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[90],E,E,24,[[[U]],[R[73]]]],[11,R[91],E,E,24,[[],[R[73]]]],[11,R[94],E,E,24,[[["self"]],[T]]],[11,R[92],E,E,24,[[["self"]],[T]]],[11,R[93],E,E,24,[[["self"]],[R[95]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[90],E,E,25,[[[U]],[R[73]]]],[11,R[91],E,E,25,[[],[R[73]]]],[11,R[94],E,E,25,[[["self"]],[T]]],[11,R[92],E,E,25,[[["self"]],[T]]],[11,R[93],E,E,25,[[["self"]],[R[95]]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[90],E,E,26,[[[U]],[R[73]]]],[11,R[91],E,E,26,[[],[R[73]]]],[11,R[94],E,E,26,[[["self"]],[T]]],[11,R[92],E,E,26,[[["self"]],[T]]],[11,R[93],E,E,26,[[["self"]],[R[95]]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[90],E,E,27,[[[U]],[R[73]]]],[11,R[91],E,E,27,[[],[R[73]]]],[11,R[94],E,E,27,[[["self"]],[T]]],[11,R[92],E,E,27,[[["self"]],[T]]],[11,R[93],E,E,27,[[["self"]],[R[95]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[90],E,E,28,[[[U]],[R[73]]]],[11,R[91],E,E,28,[[],[R[73]]]],[11,R[94],E,E,28,[[["self"]],[T]]],[11,R[92],E,E,28,[[["self"]],[T]]],[11,R[93],E,E,28,[[["self"]],[R[95]]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[90],E,E,29,[[[U]],[R[73]]]],[11,R[91],E,E,29,[[],[R[73]]]],[11,R[94],E,E,29,[[["self"]],[T]]],[11,R[92],E,E,29,[[["self"]],[T]]],[11,R[93],E,E,29,[[["self"]],[R[95]]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[90],E,E,30,[[[U]],[R[73]]]],[11,R[91],E,E,30,[[],[R[73]]]],[11,R[94],E,E,30,[[["self"]],[T]]],[11,R[92],E,E,30,[[["self"]],[T]]],[11,R[93],E,E,30,[[["self"]],[R[95]]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[90],E,E,31,[[[U]],[R[73]]]],[11,R[91],E,E,31,[[],[R[73]]]],[11,R[94],E,E,31,[[["self"]],[T]]],[11,R[92],E,E,31,[[["self"]],[T]]],[11,R[93],E,E,31,[[["self"]],[R[95]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[90],E,E,32,[[[U]],[R[73]]]],[11,R[91],E,E,32,[[],[R[73]]]],[11,R[94],E,E,32,[[["self"]],[T]]],[11,R[92],E,E,32,[[["self"]],[T]]],[11,R[93],E,E,32,[[["self"]],[R[95]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[90],E,E,33,[[[U]],[R[73]]]],[11,R[91],E,E,33,[[],[R[73]]]],[11,R[94],E,E,33,[[["self"]],[T]]],[11,R[92],E,E,33,[[["self"]],[T]]],[11,R[93],E,E,33,[[["self"]],[R[95]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[90],E,E,34,[[[U]],[R[73]]]],[11,R[91],E,E,34,[[],[R[73]]]],[11,R[94],E,E,34,[[["self"]],[T]]],[11,R[92],E,E,34,[[["self"]],[T]]],[11,R[93],E,E,34,[[["self"]],[R[95]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[90],E,E,35,[[[U]],[R[73]]]],[11,R[91],E,E,35,[[],[R[73]]]],[11,R[94],E,E,35,[[["self"]],[T]]],[11,R[92],E,E,35,[[["self"]],[T]]],[11,R[93],E,E,35,[[["self"]],[R[95]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[90],E,E,36,[[[U]],[R[73]]]],[11,R[91],E,E,36,[[],[R[73]]]],[11,R[94],E,E,36,[[["self"]],[T]]],[11,R[92],E,E,36,[[["self"]],[T]]],[11,R[93],E,E,36,[[["self"]],[R[95]]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[90],E,E,37,[[[U]],[R[73]]]],[11,R[91],E,E,37,[[],[R[73]]]],[11,R[94],E,E,37,[[["self"]],[T]]],[11,R[92],E,E,37,[[["self"]],[T]]],[11,R[93],E,E,37,[[["self"]],[R[95]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[90],E,E,38,[[[U]],[R[73]]]],[11,R[91],E,E,38,[[],[R[73]]]],[11,R[94],E,E,38,[[["self"]],[T]]],[11,R[92],E,E,38,[[["self"]],[T]]],[11,R[93],E,E,38,[[["self"]],[R[95]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[88],E,E,3,[[["self"]],[T]]],[11,R[89],E,E,3,[[["self"],[T]]]],[11,R[90],E,E,3,[[[U]],[R[73]]]],[11,R[91],E,E,3,[[],[R[73]]]],[11,R[94],E,E,3,[[["self"]],[T]]],[11,R[92],E,E,3,[[["self"]],[T]]],[11,R[93],E,E,3,[[["self"]],[R[95]]]],[11,"into",R[98],E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[90],E,E,39,[[[U]],[R[73]]]],[11,R[91],E,E,39,[[],[R[73]]]],[11,R[94],E,E,39,[[["self"]],[T]]],[11,R[92],E,E,39,[[["self"]],[T]]],[11,R[93],E,E,39,[[["self"]],[R[95]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[90],E,E,40,[[[U]],[R[73]]]],[11,R[91],E,E,40,[[],[R[73]]]],[11,R[94],E,E,40,[[["self"]],[T]]],[11,R[92],E,E,40,[[["self"]],[T]]],[11,R[93],E,E,40,[[["self"]],[R[95]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[90],E,E,41,[[[U]],[R[73]]]],[11,R[91],E,E,41,[[],[R[73]]]],[11,R[94],E,E,41,[[["self"]],[T]]],[11,R[92],E,E,41,[[["self"]],[T]]],[11,R[93],E,E,41,[[["self"]],[R[95]]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[90],E,E,42,[[[U]],[R[73]]]],[11,R[91],E,E,42,[[],[R[73]]]],[11,R[94],E,E,42,[[["self"]],[T]]],[11,R[92],E,E,42,[[["self"]],[T]]],[11,R[93],E,E,42,[[["self"]],[R[95]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[90],E,E,43,[[[U]],[R[73]]]],[11,R[91],E,E,43,[[],[R[73]]]],[11,R[94],E,E,43,[[["self"]],[T]]],[11,R[92],E,E,43,[[["self"]],[T]]],[11,R[93],E,E,43,[[["self"]],[R[95]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[90],E,E,44,[[[U]],[R[73]]]],[11,R[91],E,E,44,[[],[R[73]]]],[11,R[94],E,E,44,[[["self"]],[T]]],[11,R[92],E,E,44,[[["self"]],[T]]],[11,R[93],E,E,44,[[["self"]],[R[95]]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[90],E,E,45,[[[U]],[R[73]]]],[11,R[91],E,E,45,[[],[R[73]]]],[11,R[94],E,E,45,[[["self"]],[T]]],[11,R[92],E,E,45,[[["self"]],[T]]],[11,R[93],E,E,45,[[["self"]],[R[95]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[90],E,E,46,[[[U]],[R[73]]]],[11,R[91],E,E,46,[[],[R[73]]]],[11,R[94],E,E,46,[[["self"]],[T]]],[11,R[92],E,E,46,[[["self"]],[T]]],[11,R[93],E,E,46,[[["self"]],[R[95]]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[90],E,E,47,[[[U]],[R[73]]]],[11,R[91],E,E,47,[[],[R[73]]]],[11,R[94],E,E,47,[[["self"]],[T]]],[11,R[92],E,E,47,[[["self"]],[T]]],[11,R[93],E,E,47,[[["self"]],[R[95]]]],[11,"into",E,E,48,[[],[U]]],[11,"from",E,E,48,[[[T]],[T]]],[11,R[90],E,E,48,[[[U]],[R[73]]]],[11,R[91],E,E,48,[[],[R[73]]]],[11,R[94],E,E,48,[[["self"]],[T]]],[11,R[92],E,E,48,[[["self"]],[T]]],[11,R[93],E,E,48,[[["self"]],[R[95]]]],[11,"into",R[99],E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[90],E,E,50,[[[U]],[R[73]]]],[11,R[91],E,E,50,[[],[R[73]]]],[11,R[94],E,E,50,[[["self"]],[T]]],[11,R[92],E,E,50,[[["self"]],[T]]],[11,R[93],E,E,50,[[["self"]],[R[95]]]],[11,"into",E,E,63,[[],[U]]],[11,"from",E,E,63,[[[T]],[T]]],[11,R[90],E,E,63,[[[U]],[R[73]]]],[11,R[91],E,E,63,[[],[R[73]]]],[11,R[94],E,E,63,[[["self"]],[T]]],[11,R[92],E,E,63,[[["self"]],[T]]],[11,R[93],E,E,63,[[["self"]],[R[95]]]],[11,"into",E,E,64,[[],[U]]],[11,"from",E,E,64,[[[T]],[T]]],[11,R[90],E,E,64,[[[U]],[R[73]]]],[11,R[91],E,E,64,[[],[R[73]]]],[11,R[94],E,E,64,[[["self"]],[T]]],[11,R[92],E,E,64,[[["self"]],[T]]],[11,R[93],E,E,64,[[["self"]],[R[95]]]],[11,"header",E,E,50,[[["self"]],[[R[72]],[R[60],[R[72]]]]]],[11,R[83],E,E,50,[[["usize"],[R[61]],["pin"],["self"]],[["poll",[R[73]]],[R[73]]]]],[11,R[85],E,E,50,[[["pin"],[R[61]],["r"],["pin"],["self"]],[["poll",[R[73]]],[R[73]]]]],[11,"extract",E,E,50,[[["self"]],[[R[73],[R[74]]],[R[74]]]]],[11,"as_ref",R[98],E,39,[[["self"]],["self"]]],[11,"as_ref",E,E,40,[[["self"]],["self"]]],[11,"as_ref",E,E,41,[[["self"]],["self"]]],[11,"as_ref",E,E,42,[[["self"]],["self"]]],[11,"as_ref",E,E,43,[[["self"]],["self"]]],[11,"as_ref",E,E,44,[[["self"]],["self"]]],[11,"as_ref",E,E,45,[[["self"]],["self"]]],[11,"as_ref",E,E,46,[[["self"]],["self"]]],[11,"as_ref",E,E,47,[[["self"]],["self"]]],[11,"as_ref",E,E,48,[[["self"]],["self"]]],[11,"as_ref",R[5],E,55,[[["self"]]]],[11,"extend",E,E,59,[[["self"],[R[104]]]]],[11,"clone",R[97],E,3,[[["self"]],[R[100]]]],[11,"clone",R[5],E,51,[[["self"]],[R[69]]]],[11,"clone",E,E,52,[[["self"]],[R[68]]]],[11,"clone",E,E,53,[[["self"]],["statfs"]]],[11,"clone",E,E,59,[[["self"]],[R[77]]]],[11,R[101],R[96],E,1,[[],["self"]]],[11,R[101],R[5],E,51,[[],[R[69]]]],[11,R[101],E,E,52,[[],[R[68]]]],[11,R[101],E,E,53,[[],["statfs"]]],[11,R[101],E,E,57,[[],["self"]]],[11,R[101],E,E,59,[[],["self"]]],[11,"cmp",E,E,59,[[[R[77]],["self"]],[R[102]]]],[11,"eq",R[97],E,3,[[["self"],[R[100]]],["bool"]]],[11,"eq",R[5],E,59,[[[R[77]],["self"]],["bool"]]],[11,"ne",E,E,59,[[[R[77]],["self"]],["bool"]]],[11,R[145],E,E,59,[[[R[77]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,"lt",E,E,59,[[[R[77]],["self"]],["bool"]]],[11,"le",E,E,59,[[[R[77]],["self"]],["bool"]]],[11,"gt",E,E,59,[[[R[77]],["self"]],["bool"]]],[11,"ge",E,E,59,[[[R[77]],["self"]],["bool"]]],[11,"fmt",R[96],E,1,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,2,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",R[97],E,0,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,4,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,5,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,6,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,7,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,8,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,9,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,10,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,11,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,12,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,13,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,14,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,15,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,16,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,17,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,18,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,19,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,20,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,21,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,22,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,23,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,24,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,25,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,26,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,3,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,27,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,28,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,29,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,30,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,31,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,32,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,33,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,34,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,35,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,36,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,37,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,38,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",R[98],E,39,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,40,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,41,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,42,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,43,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,44,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,45,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,46,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,47,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,48,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",R[99],E,50,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,63,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,64,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",R[5],E,51,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,52,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,53,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,54,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,55,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,56,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,57,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,58,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,59,[[["self"],[R[103]]],[R[73]]]],[11,"fmt",E,E,60,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,62,[[[R[103]],["self"]],[R[73]]]],[11,"sub",E,"Returns the set difference of the two sets of flags.",59,[[[R[77]]],[R[77]]]],[11,R[90],E,E,51,[[["stat"]],[R[73]]]],[11,R[90],E,E,52,[[["flock"]],[R[73]]]],[11,R[90],E,E,53,[[["statvfs"]],[R[73]]]],[11,"sub_assign",E,"Disables all flags enabled in the set.",59,[[["self"],[R[77]]]]],[11,"not",E,"Returns the complement of this set of flags.",59,[[],[R[77]]]],[11,"bitand",E,"Returns the intersection between the two sets of flags.",59,[[[R[77]]],[R[77]]]],[11,"bitor",E,"Returns the union of the two sets of flags.",59,[[[R[77]]],[R[77]]]],[11,"bitxor",E,"Returns the left flags, but with all the right flags…",59,[[[R[77]]],[R[77]]]],[11,"bitand_assign",E,"Disables all flags disabled in the set.",59,[[["self"],[R[77]]]]],[11,"bitor_assign",E,"Adds the set of flags.",59,[[["self"],[R[77]]]]],[11,"bitxor_assign",E,"Toggles the set of flags.",59,[[["self"],[R[77]]]]],[11,"hash",E,E,59,[[["self"],["__h"]]]],[11,R[146],E,E,59,[[[R[104]]],[R[77]]]],[11,"fmt",E,E,59,[[["self"],[R[103]]],[R[73]]]],[11,"fmt",E,E,59,[[["self"],[R[103]]],[R[73]]]],[11,"fmt",E,E,59,[[["self"],[R[103]]],[R[73]]]],[11,"fmt",E,E,59,[[["self"],[R[103]]],[R[73]]]],[11,"poll",R[96],E,2,[[["pin"],["self"],[R[61]]],["poll"]]],[11,"poll",R[5],E,62,[[["pin"],["self"],[R[61]]],["poll"]]],[11,R[105],R[96],E,2,[[["self"]],["bool"]]],[11,R[105],R[5],E,62,[[["self"]],["bool"]]],[11,"call",E,R[106],61,[[["self"],[R[107]],[R[61]]],[["pin",["box"]],["box",["future"]]]]]],"p":[[4,R[18]],[3,R[1]],[3,R[108]],[4,R[109]],[3,R[6]],[3,R[7]],[3,R[8]],[3,R[9]],[3,R[25]],[3,"Mknod"],[3,"Mkdir"],[3,"Unlink"],[3,"Rmdir"],[3,"Rename"],[3,"Link"],[3,"Open"],[3,"Read"],[3,"Write"],[3,R[36]],[3,"Statfs"],[3,"Fsync"],[3,R[10]],[3,R[11]],[3,R[12]],[3,R[13]],[3,"Flush"],[3,R[45]],[3,R[47]],[3,R[14]],[3,R[15]],[3,"Getlk"],[3,"Setlk"],[3,"Flock"],[3,"Access"],[3,"Create"],[3,"Bmap"],[3,R[16]],[3,R[17]],[3,"Poll"],[3,R[110]],[3,R[111]],[3,R[112]],[3,R[113]],[3,R[114]],[3,R[115]],[3,R[116]],[3,"ReplyLk"],[3,R[117]],[3,R[118]],[8,"Buffer"],[3,R[119]],[3,"FileAttr"],[3,"FileLock"],[3,"StatFs"],[3,R[0]],[3,"DirEntry"],[3,"Context"],[3,R[120]],[3,R[121]],[3,R[122]],[3,"Session"],[8,R[123]],[3,R[124]],[3,"Request"],[3,R[125]]]};
searchIndex["polyfuse_examples"]={"doc":E,"i":[[5,"init_tracing",R[132],E,N,[[],[R[73]]]],[5,"get_mountpoint",E,E,N,[[],[[R[73],[R[144]]],[R[144]]]]],[0,"memfs",E,E,N,N],[3,R[170],R[140],E,N,N],[3,"File",E,E,N,N],[3,R[171],E,E,N,N],[3,"MemFS",E,"An in-memory filesystem.",N,N],[11,"new",E,E,0,[[["weak",["inode"]],[R[60],["weak"]],["u64"],[R[69]]],["self"]]],[11,R[156],E,E,0,[[["self"]]]],[11,"get",E,E,0,[[["self"],["osstr"]]]],[11,"insert",E,E,0,[[["self"],["inode"],["weak",["inode"]],["osstr"]]]],[11,"remove",E,E,0,[[["self"],["osstr"]]]],[11,"entries",E,E,0,[[["self"]]]],[11,"new",E,E,1,[[["u8"],["vec",["u8"]],["u64"],[R[69]]],["self"]]],[11,"read",E,E,1,[[["self"],["usize"]]]],[11,"write",E,E,1,[[["self"],["usize"]]]],[11,"new",E,E,2,[[[R[163]]],["self"]]],[11,"get",E,E,2,[[["self"],["u64"]]]],[11,"lookup",E,E,2,[[["self"],["u64"],["osstr"]]]],[11,"insert_file",E,E,2,[[[R[69]],["self"],["vec",["u8"]],["u8"],["u64"],["osstr"]]]],[11,"insert_dir",E,E,2,[[[R[69]],["self"],["u64"],["osstr"]]]],[11,"remove",E,E,2,[[["self"],["u64"],["osstr"]]]],[8,"INode",E,E,N,N],[10,"ino",E,E,3,[[["self"]],["u64"]]],[10,R[147],E,E,3,[[["self"]],[R[69]]]],[10,R[148],E,E,3,[[["self"],[R[69]]]]],[11,"new",E,"Create a new `MemFS` mounted on the specified directory.",4,[[[R[163]]],["self"]]],[0,"prelude",R[132],E,N,N],[14,"anyhow",R[141],"Construct an ad-hoc error from a string.",N,N],[14,"ensure",E,"Return early with an error if a condition is not satisfied.",N,N],[8,"Future",E,"A future represents an asynchronous computation.",N,N],[16,"Output",E,"The type of value produced on completion.",5,N],[10,"poll",E,"Attempt to resolve the future to a final value,…",5,[[["pin"],["self"],[R[61]]],["poll"]]],[8,R[172],E,"An extension trait for `Future`s that provides a variety…",N,N],[11,"map",E,"Map this future's output to a different type, returning a…",6,[[["f"]],["map"]]],[11,"then",E,"Chain on a computation for when a future finished, passing…",6,[[["f"]],["then"]]],[11,"left_future",E,R[133],6,[[],["either"]]],[11,"right_future",E,R[133],6,[[],["either"]]],[11,"into_stream",E,"Convert this future into a single element stream.",6,[[],["intostream"]]],[11,"flatten",E,R[134],6,[[],["flatten"]]],[11,"flatten_stream",E,R[134],6,[[],["flattenstream"]]],[11,"fuse",E,"Fuse a future such that `poll` will never again be called…",6,[[],["fuse"]]],[11,"inspect",E,"Do something with the output of a future before passing it…",6,[[["f"]],["inspect"]]],[11,"catch_unwind",E,"Catches unwinding panics while polling the future.",6,[[],["catchunwind"]]],[11,"shared",E,"Create a cloneable handle to this future where all handles…",6,[[],["shared"]]],[11,"remote_handle",E,"Turn this future into a future that yields `()` on…",6,[[]]],[11,"boxed",E,R[135],6,[[],[["box",["future"]],["pin",["box"]]]]],[11,"boxed_local",E,R[135],6,[[],[["box",["future"]],["pin",["box"]]]]],[11,"unit_error",E,R[136],6,[[],["uniterror"]]],[11,"never_error",E,R[136],6,[[],["nevererror"]]],[11,"poll_unpin",E,"A convenience for calling `Future::poll` on `Unpin` future…",6,[[["self"],[R[61]]],["poll"]]],[11,"now_or_never",E,"Evaluates and consumes the future, returning the resulting…",6,[[],[R[60]]]],[8,R[173],E,"Write bytes asynchronously.",N,N],[10,R[174],E,"Attempt to write bytes from `buf` into the object.",7,[[["pin"],["self"],[R[61]]],[["poll",[R[73]]],[R[73],["usize","error"]]]]],[11,R[175],E,"Attempt to write bytes from `bufs` into the object using…",7,[[["pin"],["self"],[R[61]]],[["poll",[R[73]]],[R[73],["usize","error"]]]]],[10,R[176],E,"Attempt to flush the object, ensuring that any buffered…",7,[[["pin"],["self"],[R[61]]],[["poll",[R[73]]],[R[73],["error"]]]]],[10,R[177],E,"Attempt to close the object.",7,[[["pin"],["self"],[R[61]]],[["poll",[R[73]]],[R[73],["error"]]]]],[23,R[137],E,E,N,N],[4,R[18],E,R[19],N,N],[13,R[6],E,R[20],8,N],[13,R[0],E,R[21],8,N],[13,R[7],E,R[22],8,N],[13,R[8],E,R[23],8,N],[13,R[9],E,R[24],8,N],[13,R[25],E,R[26],8,N],[13,"Mknod",E,R[27],8,N],[13,"Mkdir",E,R[28],8,N],[13,"Unlink",E,R[29],8,N],[13,"Rmdir",E,R[30],8,N],[13,"Rename",E,R[31],8,N],[13,"Link",E,R[32],8,N],[13,"Open",E,R[33],8,N],[13,"Read",E,R[34],8,N],[13,"Write",E,R[35],8,N],[13,R[36],E,R[37],8,N],[13,"Statfs",E,R[38],8,N],[13,"Fsync",E,R[39],8,N],[13,R[10],E,R[40],8,N],[13,R[11],E,R[41],8,N],[13,R[12],E,R[42],8,N],[13,R[13],E,R[43],8,N],[13,"Flush",E,R[44],8,N],[13,R[45],E,R[46],8,N],[13,R[47],E,R[48],8,N],[13,R[14],E,R[49],8,N],[13,R[15],E,R[50],8,N],[13,"Getlk",E,R[51],8,N],[13,"Setlk",E,R[52],8,N],[13,"Flock",E,R[53],8,N],[13,"Access",E,R[54],8,N],[13,"Create",E,R[55],8,N],[13,"Bmap",E,R[56],8,N],[13,R[16],E,R[57],8,N],[13,R[17],E,R[58],8,N],[13,"Poll",E,R[59],8,N],[3,"Context",E,R[138],N,N],[8,R[123],E,R[139],N,N],[11,"call",E,R[106],9,[[[R[61]],["self"],[R[107]]],[["box",["future"]],["pin",["box"]]]]],[3,"OsStr",E,"Borrowed reference to an OS string (see [`OsString`]).",N,N],[3,"OsString",E,"A type that can represent owned, mutable platform-native…",N,N],[8,"OsStrExt",E,"Platform-specific extensions to [`OsStr`].",N,N],[10,R[142],E,"Creates an [`OsStr`] from a byte slice.",10,[[],["self"]]],[10,"as_bytes",E,"Gets the underlying byte view of the [`OsStr`] slice.",10,[[["self"]]]],[3,"Path",E,"A slice of a path (akin to [`str`]).",N,N],[3,"PathBuf",E,"An owned, mutable path (akin to [`String`]).",N,N],[11,"into",R[140],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[90],E,E,0,[[[U]],[R[73]]]],[11,R[91],E,E,0,[[],[R[73]]]],[11,R[94],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,[[["self"]],[T]]],[11,R[93],E,E,0,[[["self"]],[R[95]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[90],E,E,1,[[[U]],[R[73]]]],[11,R[91],E,E,1,[[],[R[73]]]],[11,R[94],E,E,1,[[["self"]],[T]]],[11,R[92],E,E,1,[[["self"]],[T]]],[11,R[93],E,E,1,[[["self"]],[R[95]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[90],E,E,2,[[[U]],[R[73]]]],[11,R[91],E,E,2,[[],[R[73]]]],[11,R[94],E,E,2,[[["self"]],[T]]],[11,R[92],E,E,2,[[["self"]],[T]]],[11,R[93],E,E,2,[[["self"]],[R[95]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[90],E,E,4,[[[U]],[R[73]]]],[11,R[91],E,E,4,[[],[R[73]]]],[11,R[94],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,[[["self"]],[T]]],[11,R[93],E,E,4,[[["self"]],[R[95]]]],[11,"into",R[141],E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[90],E,E,8,[[[U]],[R[73]]]],[11,R[91],E,E,8,[[],[R[73]]]],[11,R[94],E,E,8,[[["self"]],[T]]],[11,R[92],E,E,8,[[["self"]],[T]]],[11,R[93],E,E,8,[[["self"]],[R[95]]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[90],E,E,11,[[[U]],[R[73]]]],[11,R[91],E,E,11,[[],[R[73]]]],[11,R[94],E,E,11,[[["self"]],[T]]],[11,R[92],E,E,11,[[["self"]],[T]]],[11,R[93],E,E,11,[[["self"]],[R[95]]]],[11,R[88],E,E,12,[[["self"]],[T]]],[11,R[89],E,E,12,[[["self"],[T]]]],[11,R[94],E,E,12,[[["self"]],[T]]],[11,R[92],E,E,12,[[["self"]],[T]]],[11,R[93],E,E,12,[[["self"]],[R[95]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[88],E,E,13,[[["self"]],[T]]],[11,R[89],E,E,13,[[["self"],[T]]]],[11,R[90],E,E,13,[[[U]],[R[73]]]],[11,R[91],E,E,13,[[],[R[73]]]],[11,R[94],E,E,13,[[["self"]],[T]]],[11,R[92],E,E,13,[[["self"]],[T]]],[11,R[93],E,E,13,[[["self"]],[R[95]]]],[11,R[88],E,E,14,[[["self"]],[T]]],[11,R[89],E,E,14,[[["self"],[T]]]],[11,R[94],E,E,14,[[["self"]],[T]]],[11,R[92],E,E,14,[[["self"]],[T]]],[11,R[93],E,E,14,[[["self"]],[R[95]]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[88],E,E,15,[[["self"]],[T]]],[11,R[89],E,E,15,[[["self"],[T]]]],[11,R[90],E,E,15,[[[U]],[R[73]]]],[11,R[91],E,E,15,[[],[R[73]]]],[11,R[94],E,E,15,[[["self"]],[T]]],[11,R[92],E,E,15,[[["self"]],[T]]],[11,R[93],E,E,15,[[["self"]],[R[95]]]],[11,"as_ref",E,E,14,[[["self"]],["osstr"]]],[11,"as_ref",E,E,15,[[["self"]],["path"]]],[11,"as_ref",E,E,15,[[["self"]],["osstr"]]],[11,"as_ref",E,E,14,[[["self"]],["path"]]],[11,"as_ref",E,E,12,[[["self"]],["path"]]],[11,"as_ref",E,E,12,[[["self"]],["osstr"]]],[11,"as_ref",E,E,13,[[["self"]],["osstr"]]],[11,"as_ref",E,E,13,[[["self"]],["path"]]],[11,R[142],E,E,12,[[],["osstr"]]],[11,"as_bytes",E,E,12,[[["self"]]]],[11,"from_vec",E,E,13,[[["vec",["u8"]],["u8"]],[R[143]]]],[11,"into_vec",E,E,13,[[],[["vec",["u8"]],["u8"]]]],[11,"index",E,E,13,[[["rangefull"],["self"]],["osstr"]]],[11,"from",E,"Converts a [`Box`]`<`[`OsStr`]`>` into a `OsString`…",13,[[["osstr"],["box",["osstr"]]],[R[143]]]],[11,"from",E,E,15,[[[T]],[R[144]]]],[11,"from",E,"Converts a `String` into a `PathBuf`",15,[[["string"]],[R[144]]]],[11,"from",E,"Converts a `Box<Path>` into a `PathBuf`",15,[[["box",["path"]],["path"]],[R[144]]]],[11,"from",E,"Converts a [`String`] into a [`OsString`].",13,[[["string"]],[R[143]]]],[11,"from",E,E,13,[[[T]],[R[143]]]],[11,"from",E,"Converts a `OsString` into a `PathBuf`",15,[[[R[143]]],[R[144]]]],[11,"from",E,E,13,[[["cow",["osstr"]],["osstr"]],[R[143]]]],[11,"from",E,"Converts a `PathBuf` into a `OsString`",13,[[[R[144]]],[R[143]]]],[11,"from",E,E,15,[[["path"],["cow",["path"]]],[R[144]]]],[11,"cmp",E,E,15,[[[R[144]],["self"]],[R[102]]]],[11,"cmp",E,E,14,[[["path"],["self"]],[R[102]]]],[11,"cmp",E,E,12,[[["self"],["osstr"]],[R[102]]]],[11,"cmp",E,E,13,[[[R[143]],["self"]],[R[102]]]],[11,"clone",E,E,13,[[["self"]],[R[143]]]],[11,"clone",E,E,15,[[["self"]],[R[144]]]],[11,"hash",E,E,14,[[["self"],["h"]]]],[11,"hash",E,E,12,[[["self"],["h"]]]],[11,"hash",E,E,15,[[["self"],["h"]]]],[11,"hash",E,E,13,[[["self"],["h"]]]],[11,R[145],E,E,12,[[["str"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[[R[143]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,"lt",E,E,13,[[[R[143]],["self"]],["bool"]]],[11,"le",E,E,13,[[[R[143]],["self"]],["bool"]]],[11,"gt",E,E,13,[[[R[143]],["self"]],["bool"]]],[11,"ge",E,E,13,[[[R[143]],["self"]],["bool"]]],[11,R[145],E,E,13,[[["str"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[[R[144]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[["self"],["cow"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[["self"],["osstr"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[[R[143]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[["self"],["cow"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[["osstr"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[[R[143]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[["path"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[["cow"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[["self"],["osstr"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[["self"],["cow"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[["self"],["path"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[[R[143]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[[R[144]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[["self"],["path"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[["cow"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[["path"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[["osstr"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[["self"],["cow"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[[R[144]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[["cow"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[["path"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,14,[[[R[144]],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[["self"],["path"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[["self"],["osstr"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,12,[[["self"],["osstr"]],[[R[60],[R[102]]],[R[102]]]]],[11,"lt",E,E,12,[[["self"],["osstr"]],["bool"]]],[11,"le",E,E,12,[[["self"],["osstr"]],["bool"]]],[11,"gt",E,E,12,[[["self"],["osstr"]],["bool"]]],[11,"ge",E,E,12,[[["self"],["osstr"]],["bool"]]],[11,R[145],E,E,13,[[["cow"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,13,[[["osstr"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[145],E,E,15,[[["path"],["self"]],[[R[60],[R[102]]],[R[102]]]]],[11,R[101],E,E,15,[[],[R[144]]]],[11,R[101],E,"Constructs an empty `OsString`.",13,[[],[R[143]]]],[11,R[88],E,E,12,[[["self"]],[R[143]]]],[11,R[89],E,E,12,[[["self"],[R[143]]]]],[11,R[88],E,E,14,[[["self"]],[R[144]]]],[11,R[89],E,E,14,[[[R[144]],["self"]]]],[11,R[146],E,E,15,[[["i"]],[R[144]]]],[11,"deref",E,E,15,[[["self"]],["path"]]],[11,"deref",E,E,13,[[["self"]],["osstr"]]],[11,"from_str",E,E,15,[[["str"]],[[R[73],[R[144]]],[R[144]]]]],[11,"eq",E,E,15,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,15,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,13,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,12,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,15,[[[R[143]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,14,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,15,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,13,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[144]],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,14,[[[R[143]],["self"]],["bool"]]],[11,"eq",E,E,13,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,15,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,14,[[["osstr"],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,12,[[[R[144]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,13,[[[R[143]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,14,[[[R[144]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["cow"]],["bool"]]],[11,"eq",E,E,13,[[["str"],["self"]],["bool"]]],[11,"eq",E,E,13,[[["self"],["osstr"]],["bool"]]],[11,"eq",E,E,12,[[["path"],["self"]],["bool"]]],[11,"eq",E,E,15,[[[R[144]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["cow"],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["path"]],["bool"]]],[11,"eq",E,E,12,[[[R[143]],["self"]],["bool"]]],[11,"eq",E,E,15,[[["self"],["osstr"]],["bool"]]],[11,"extend",E,E,15,[[["self"],["i"]]]],[11,R[94],E,E,13,[[["self"]],["osstr"]]],[11,R[94],E,E,15,[[["self"]],["path"]]],[11,"fmt",E,E,15,[[[R[103]],["self"]],[[R[73],["error"]],["error"]]]],[11,"fmt",E,E,12,[[[R[103]],["self"]],[[R[73],["error"]],["error"]]]],[11,"fmt",E,E,14,[[[R[103]],["self"]],[[R[73],["error"]],["error"]]]],[11,"fmt",E,E,13,[[[R[103]],["self"]],[[R[73],["error"]],["error"]]]],[11,"fmt",E,E,8,[[[R[103]],["self"]],[[R[73],["error"]],["error"]]]],[11,"fmt",E,E,11,[[[R[103]],["self"]],[[R[73],["error"]],["error"]]]],[11,"ino",R[140],E,0,[[["self"]],["u64"]]],[11,R[147],E,E,0,[[["self"]],[R[69]]]],[11,R[148],E,E,0,[[["self"],[R[69]]]]],[11,"ino",E,E,1,[[["self"]],["u64"]]],[11,R[147],E,E,1,[[["self"]],[R[69]]]],[11,R[148],E,E,1,[[["self"],[R[69]]]]],[11,"fmt",E,E,1,[[[R[103]],["self"]],[R[73]]]],[11,"call",E,E,4,[[["self"],[R[61]],[R[107]]],[["pin",["box"]],["box",["future"]]]]],[11,"downcast_ref",E,E,3,[[["self"]],[[R[60]],[T]]]],[11,"uid",R[141],R[149],11,[[["self"]],["u32"]]],[11,"gid",E,R[150],11,[[["self"]],["u32"]]],[11,"pid",E,R[151],11,[[["self"]],["u32"]]],[11,R[152],E,R[153],11,[[["i32"],["self"]]]],[11,R[154],E,R[155],11,[[["self"]]]],[11,"new",E,"Coerces into an `OsStr` slice.",12,[[["s"]],["osstr"]]],[11,"to_str",E,"Yields a [`&str`] slice if the `OsStr` is valid Unicode.",12,[[["self"]],[["str"],[R[60],["str"]]]]],[11,R[158],E,"Converts an `OsStr` to a [`Cow`]`<`[`str`]`>`.",12,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_os_string",E,"Copies the slice into an owned [`OsString`].",12,[[["self"]],[R[143]]]],[11,R[156],E,"Checks whether the `OsStr` is empty.",12,[[["self"]],["bool"]]],[11,"len",E,"Returns the length of this `OsStr`.",12,[[["self"]],["usize"]]],[11,R[166],E,"Converts a [`Box`]`<OsStr>` into an [`OsString`] without…",12,[[["osstr"],["box",["osstr"]]],[R[143]]]],[11,"new",E,"Constructs a new empty `OsString`.",13,[[],[R[143]]]],[11,R[157],E,"Converts to an [`OsStr`] slice.",13,[[["self"]],["osstr"]]],[11,"into_string",E,"Converts the `OsString` into a [`String`] if it contains…",13,[[],[[R[73],["string",R[143]]],["string"],[R[143]]]]],[11,"push",E,"Extends the string with the given [`&OsStr`] slice.",13,[[["self"],[T]]]],[11,R[165],E,"Creates a new `OsString` with the given capacity.",13,[[["usize"]],[R[143]]]],[11,"clear",E,"Truncates the `OsString` to zero length.",13,[[["self"]]]],[11,"capacity",E,"Returns the capacity this `OsString` can hold without…",13,[[["self"]],["usize"]]],[11,"reserve",E,"Reserves capacity for at least `additional` more capacity…",13,[[["self"],["usize"]]]],[11,R[167],E,"Reserves the minimum capacity for exactly `additional`…",13,[[["self"],["usize"]]]],[11,R[168],E,"Shrinks the capacity of the `OsString` to match its length.",13,[[["self"]]]],[11,R[169],E,"Shrinks the capacity of the `OsString` with a lower bound.",13,[[["self"],["usize"]]]],[11,"into_boxed_os_str",E,"Converts this `OsString` into a boxed [`OsStr`].",13,[[],[["osstr"],["box",["osstr"]]]]],[11,"new",E,"Directly wraps a string slice as a `Path` slice.",14,[[["s"]],["path"]]],[11,R[157],E,"Yields the underlying [`OsStr`] slice.",14,[[["self"]],["osstr"]]],[11,"to_str",E,"Yields a [`&str`] slice if the `Path` is valid unicode.",14,[[["self"]],[["str"],[R[60],["str"]]]]],[11,R[158],E,"Converts a `Path` to a [`Cow<str>`].",14,[[["self"]],[["str"],["cow",["str"]]]]],[11,"to_path_buf",E,"Converts a `Path` to an owned [`PathBuf`].",14,[[["self"]],[R[144]]]],[11,"is_absolute",E,"Returns `true` if the `Path` is absolute, i.e., if it is…",14,[[["self"]],["bool"]]],[11,"is_relative",E,"Returns `true` if the `Path` is relative, i.e., not…",14,[[["self"]],["bool"]]],[11,"has_root",E,"Returns `true` if the `Path` has a root.",14,[[["self"]],["bool"]]],[11,R[62],E,"Returns the `Path` without its final component, if there…",14,[[["self"]],[["path"],[R[60],["path"]]]]],[11,R[159],E,"Produces an iterator over `Path` and its ancestors.",14,[[["self"]],[R[159]]]],[11,"file_name",E,"Returns the final component of the `Path`, if there is one.",14,[[["self"]],[["osstr"],[R[60],["osstr"]]]]],[11,"strip_prefix",E,"Returns a path that, when joined onto `base`, yields `self`.",14,[[["self"],["p"]],[[R[73],["path",R[160]]],["path"],[R[160]]]]],[11,"starts_with",E,"Determines whether `base` is a prefix of `self`.",14,[[["self"],["p"]],["bool"]]],[11,"ends_with",E,"Determines whether `child` is a suffix of `self`.",14,[[["self"],["p"]],["bool"]]],[11,"file_stem",E,"Extracts the stem (non-extension) portion of…",14,[[["self"]],[["osstr"],[R[60],["osstr"]]]]],[11,"extension",E,"Extracts the extension of [`self.file_name`], if possible.",14,[[["self"]],[["osstr"],[R[60],["osstr"]]]]],[11,"join",E,"Creates an owned [`PathBuf`] with `path` adjoined to `self`.",14,[[["self"],["p"]],[R[144]]]],[11,"with_file_name",E,R[161],14,[[["s"],["self"]],[R[144]]]],[11,"with_extension",E,R[161],14,[[["s"],["self"]],[R[144]]]],[11,R[162],E,"Produces an iterator over the [`Component`]s of the path.",14,[[["self"]],[R[162]]]],[11,"iter",E,"Produces an iterator over the path's components viewed as…",14,[[["self"]],["iter"]]],[11,"display",E,"Returns an object that implements [`Display`] for safely…",14,[[["self"]],["display"]]],[11,R[163],E,"Queries the file system to get information about a file,…",14,[[["self"]],[[R[163]],["error"],[R[73],[R[163],"error"]]]]],[11,"symlink_metadata",E,"Queries the metadata about a file without following…",14,[[["self"]],[[R[163]],["error"],[R[73],[R[163],"error"]]]]],[11,"canonicalize",E,"Returns the canonical, absolute form of the path with all…",14,[[["self"]],[[R[144]],["error"],[R[73],[R[144],"error"]]]]],[11,"read_link",E,"Reads a symbolic link, returning the file that the link…",14,[[["self"]],[[R[144]],["error"],[R[73],[R[144],"error"]]]]],[11,"read_dir",E,"Returns an iterator over the entries within a directory.",14,[[["self"]],[["readdir"],["error"],[R[73],["readdir","error"]]]]],[11,"exists",E,"Returns `true` if the path points at an existing entity.",14,[[["self"]],["bool"]]],[11,"is_file",E,R[164],14,[[["self"]],["bool"]]],[11,"is_dir",E,R[164],14,[[["self"]],["bool"]]],[11,"into_path_buf",E,"Converts a [`Box<Path>`][`Box`] into a [`PathBuf`] without…",14,[[["box",["path"]],["path"]],[R[144]]]],[11,"new",E,"Allocates an empty `PathBuf`.",15,[[],[R[144]]]],[11,R[165],E,"Creates a new `PathBuf` with a given capacity used to…",15,[[["usize"]],[R[144]]]],[11,"as_path",E,"Coerces to a [`Path`] slice.",15,[[["self"]],["path"]]],[11,"push",E,"Extends `self` with `path`.",15,[[["self"],["p"]]]],[11,"pop",E,"Truncates `self` to [`self.parent`].",15,[[["self"]],["bool"]]],[11,"set_file_name",E,"Updates [`self.file_name`] to `file_name`.",15,[[["self"],["s"]]]],[11,"set_extension",E,"Updates [`self.extension`] to `extension`.",15,[[["self"],["s"]],["bool"]]],[11,R[166],E,"Consumes the `PathBuf`, yielding its internal [`OsString`]…",15,[[],[R[143]]]],[11,"into_boxed_path",E,"Converts this `PathBuf` into a [boxed][`Box`] [`Path`].",15,[[],[["box",["path"]],["path"]]]],[11,"capacity",E,"Invokes [`capacity`] on the underlying instance of…",15,[[["self"]],["usize"]]],[11,"clear",E,"Invokes [`clear`] on the underlying instance of…",15,[[["self"]]]],[11,"reserve",E,"Invokes [`reserve`] on the underlying instance of…",15,[[["self"],["usize"]]]],[11,R[167],E,"Invokes [`reserve_exact`] on the underlying instance of…",15,[[["self"],["usize"]]]],[11,R[168],E,"Invokes [`shrink_to_fit`] on the underlying instance of…",15,[[["self"]]]],[11,R[169],E,"Invokes [`shrink_to`] on the underlying instance of…",15,[[["self"],["usize"]]]]],"p":[[3,R[170]],[3,"File"],[3,R[171]],[8,"INode"],[3,"MemFS"],[8,"Future"],[8,R[172]],[8,R[173]],[4,R[18]],[8,R[123]],[8,"OsStrExt"],[3,"Context"],[3,"OsStr"],[3,"OsString"],[3,"Path"],[3,"PathBuf"]]};
searchIndex["polyfuse_tokio"]={"doc":"Components for using `polyfuse` filesystem with Tokio…","i":[[3,"Channel","polyfuse_tokio","Asynchronous I/O object that communicates with the FUSE…",N,N],[3,R[131],E,E,N,N],[3,R[1],E,"Notification sender to the kernel.",N,N],[3,R[108],E,"A handle for awaiting the result of a `retrieve`…",N,N],[3,"Server",E,"FUSE filesystem server.",N,N],[5,"run",E,"Run a FUSE filesystem daemon mounted onto the specified…",N,[[["f"]]]],[11,"open",E,"Establish a connection with the FUSE kernel driver.",0,[[["path"],[R[126]]],[R[73]]]],[11,"try_clone",E,"Attempt to create a clone of this channel.",0,[[["self"]],[R[73]]]],[11,"options",E,E,1,[[["self"]],[[R[60],["osstr"]],["osstr"]]]],[11,"set_options",E,E,1,[[["self"]]]],[11,"mount",E,"Create a FUSE server mounted on the specified path.",2,[[[R[126]]]]],[11,R[127],E,"Create an instance of `Notifier` associated with this…",2,[[["self"]],[[R[73],[R[127]]],[R[127]]]]],[11,"run",E,"Run a FUSE filesystem daemon.",2,[[["f"]]]],[11,"run_until",E,"Run a FUSE filesystem until the specified signal is…",2,[[["s"],["f"]]]],[11,R[128],E,E,3,[[["i64"],["u64"],["self"]]]],[11,R[129],E,E,3,[[["u64"],["self"]]]],[11,"delete",E,E,3,[[["u64"],["self"]]]],[11,"store",E,E,3,[[["u64"],["self"]]]],[11,"retrieve",E,E,3,[[["u32"],["u64"],["self"]]]],[11,R[130],E,E,3,[[["u64"],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[90],E,E,0,[[[U]],[R[73]]]],[11,R[91],E,E,0,[[],[R[73]]]],[11,R[94],E,E,0,[[["self"]],[T]]],[11,R[92],E,E,0,[[["self"]],[T]]],[11,R[93],E,E,0,[[["self"]],[R[95]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[90],E,E,1,[[[U]],[R[73]]]],[11,R[91],E,E,1,[[],[R[73]]]],[11,R[94],E,E,1,[[["self"]],[T]]],[11,R[92],E,E,1,[[["self"]],[T]]],[11,R[93],E,E,1,[[["self"]],[R[95]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[90],E,E,3,[[[U]],[R[73]]]],[11,R[91],E,E,3,[[],[R[73]]]],[11,R[94],E,E,3,[[["self"]],[T]]],[11,R[92],E,E,3,[[["self"]],[T]]],[11,R[93],E,E,3,[[["self"]],[R[95]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[90],E,E,4,[[[U]],[R[73]]]],[11,R[91],E,E,4,[[],[R[73]]]],[11,R[94],E,E,4,[[["self"]],[T]]],[11,R[92],E,E,4,[[["self"]],[T]]],[11,R[93],E,E,4,[[["self"]],[R[95]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[90],E,E,2,[[[U]],[R[73]]]],[11,R[91],E,E,2,[[],[R[73]]]],[11,R[94],E,E,2,[[["self"]],[T]]],[11,R[92],E,E,2,[[["self"]],[T]]],[11,R[93],E,E,2,[[["self"]],[R[95]]]],[11,R[101],E,E,1,[[],[R[126]]]],[11,"fmt",E,E,0,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,1,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,2,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,3,[[[R[103]],["self"]],[R[73]]]],[11,"fmt",E,E,4,[[[R[103]],["self"]],[R[73]]]],[11,"poll",E,E,4,[[["pin"],["self"],[R[61]]],["poll"]]],[11,R[105],E,E,4,[[["self"]],["bool"]]],[11,"poll_read",E,E,0,[[[R[61]],["pin"],["self"]],[[R[73],["usize"]],["poll",[R[73]]]]]],[11,"poll_read_vectored",E,E,0,[[[R[61]],["pin"],["self"]],[[R[73],["usize"]],["poll",[R[73]]]]]],[11,R[174],E,E,0,[[[R[61]],["pin"],["self"]],[[R[73],["usize"]],["poll",[R[73]]]]]],[11,R[175],E,E,0,[[[R[61]],["pin"],["self"]],[[R[73],["usize"]],["poll",[R[73]]]]]],[11,R[176],E,E,0,[[["pin"],["self"],[R[61]]],[["poll",[R[73]]],[R[73]]]]],[11,R[177],E,E,0,[[["pin"],["self"],[R[61]]],[["poll",[R[73]]],[R[73]]]]]],"p":[[3,"Channel"],[3,R[131]],[3,"Server"],[3,R[1]],[3,R[108]]]};
addSearchOptions(searchIndex);initSearch(searchIndex);